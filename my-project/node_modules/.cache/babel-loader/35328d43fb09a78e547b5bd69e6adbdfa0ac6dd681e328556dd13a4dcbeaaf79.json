{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Comments\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onSubmit\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Submit\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Submit\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.book.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Author: \" + _toDisplayString($data.book.author), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.book.description), 1 /* TEXT */), _hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"strong\", null, _toDisplayString(comment.author), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(comment.content), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteComment(comment.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_2)]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(comment.replies, reply => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: reply.id\n      }, [_createElementVNode(\"div\", null, [_createElementVNode(\"strong\", null, _toDisplayString(reply.author), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(reply.content), 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: $event => $options.deleteReply(comment.id, reply.id)\n      }, \"Delete\", 8 /* PROPS */, _hoisted_3)])]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.addReply(comment.id), [\"prevent\"])\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newReplyContent = $event),\n      placeholder: \"Write a reply...\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newReplyContent]]), _hoisted_5], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.addComment && $options.addComment(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCommentAuthor = $event),\n    placeholder: \"Your name...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCommentAuthor]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newCommentContent = $event),\n    placeholder: \"Write a comment...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCommentContent]]), _hoisted_6], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_toDisplayString","$data","book","title","author","description","_hoisted_1","_Fragment","_renderList","comments","comment","key","id","content","onClick","$event","$options","deleteComment","_hoisted_2","replies","reply","deleteReply","_hoisted_3","onSubmit","_withModifiers","addReply","type","newReplyContent","placeholder","_hoisted_5","_cache","args","addComment","newCommentAuthor","newCommentContent","_hoisted_6"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>{{ book.title }}</h1>\r\n    <p>Author: {{ book.author }}</p>\r\n    <p>{{ book.description }}</p>\r\n\r\n    <h2>Comments</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span>{{ comment.content }}</span>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span>{{ reply.content }}</span>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form @submit.prevent=\"addReply(comment.id)\">\r\n          <input type=\"text\" v-model=\"newReplyContent\" placeholder=\"Write a reply...\" />\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <input type=\"text\" v-model=\"newCommentAuthor\" placeholder=\"Your name...\" />\r\n      <input type=\"text\" v-model=\"newCommentContent\" placeholder=\"Write a comment...\" />\r\n      <button>Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport bookData from \"../../../src/json/CommentData.json\"\r\n\r\nexport default {\r\n  name: \"CommentView\",\r\n  data() {\r\n    return {\r\n      book: bookData.book,\r\n      comments: bookData.comments,\r\n      newCommentAuthor: \"\",\r\n      newCommentContent: \"\",\r\n      newReplyContent: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: this.newCommentAuthor,\r\n        content: this.newCommentContent,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newCommentAuthor = \"\"\r\n      this.newCommentContent = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    addReply(commentId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      const newReply = {\r\n        id: comment.replies.length + 1,\r\n        author: \"Anonymous\",\r\n        content: this.newReplyContent\r\n      }\r\n      comment.replies.push(newReply)\r\n      this.saveComments()\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      const index = comment.replies.findIndex((reply) => reply.id === replyId)\r\n      comment.replies.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        book: this.book,\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.book = data.book\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";gCAMIA,mBAAA,CAAiB,YAAb,UAAQ;;;;gCAmBNA,mBAAA,CAAuB,gBAAf,QAAM;gCAQlBA,mBAAA,CAAuB,gBAAf,QAAM;;;uBAhClBC,mBAAA,CAkCM,cAjCJD,mBAAA,CAAyB,YAAAE,gBAAA,CAAlBC,KAAA,CAAAC,IAAI,CAACC,KAAK,kBACjBL,mBAAA,CAAgC,WAA7B,UAAQ,GAAAE,gBAAA,CAAGC,KAAA,CAAAC,IAAI,CAACE,MAAM,kBACzBN,mBAAA,CAA6B,WAAAE,gBAAA,CAAvBC,KAAA,CAAAC,IAAI,CAACG,WAAW,kBAEtBC,UAAiB,EACjBR,mBAAA,CAqBK,c,kBApBHC,mBAAA,CAmBKQ,SAAA,QAAAC,WAAA,CAnBiBP,KAAA,CAAAQ,QAAQ,EAAnBC,OAAO;yBAAlBX,mBAAA,CAmBK;MAnB4BY,GAAG,EAAED,OAAO,CAACE;QAC5Cd,mBAAA,CAIM,cAHJA,mBAAA,CAAqC,gBAAAE,gBAAA,CAA1BU,OAAO,CAACN,MAAM,kBACzBN,mBAAA,CAAkC,cAAAE,gBAAA,CAAzBU,OAAO,CAACG,OAAO,kBACxBf,mBAAA,CAA0D;MAAjDgB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACP,OAAO,CAACE,EAAE;OAAG,QAAM,iBAAAM,UAAA,E,GAEnDpB,mBAAA,CAQK,c,kBAPHC,mBAAA,CAMKQ,SAAA,QAAAC,WAAA,CANeE,OAAO,CAACS,OAAO,EAAxBC,KAAK;2BAAhBrB,mBAAA,CAMK;QANiCY,GAAG,EAAES,KAAK,CAACR;UAC/Cd,mBAAA,CAIM,cAHJA,mBAAA,CAAmC,gBAAAE,gBAAA,CAAxBoB,KAAK,CAAChB,MAAM,kBACvBN,mBAAA,CAAgC,cAAAE,gBAAA,CAAvBoB,KAAK,CAACP,OAAO,kBACtBf,mBAAA,CAAkE;QAAzDgB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAK,WAAW,CAACX,OAAO,CAACE,EAAE,EAAEQ,KAAK,CAACR,EAAE;SAAG,QAAM,iBAAAU,UAAA,E;sCAI/DxB,mBAAA,CAGO;MAHAyB,QAAM,EAAAC,cAAA,CAAAT,MAAA,IAAUC,QAAA,CAAAS,QAAQ,CAACf,OAAO,CAACE,EAAE;wBACxCd,mBAAA,CAA8E;MAAvE4B,IAAI,EAAC,MAAM;iEAAUzB,KAAA,CAAA0B,eAAe,GAAAZ,MAAA;MAAEa,WAAW,EAAC;mDAA7B3B,KAAA,CAAA0B,eAAe,E,GAC3CE,UAAuB,C;oCAK7B/B,mBAAA,CAIO;IAJAyB,QAAM,EAAAO,MAAA,QAAAA,MAAA,MAAAN,cAAA,KAAAO,IAAA,KAAUf,QAAA,CAAAgB,UAAA,IAAAhB,QAAA,CAAAgB,UAAA,IAAAD,IAAA,CAAU;sBAC/BjC,mBAAA,CAA2E;IAApE4B,IAAI,EAAC,MAAM;+DAAUzB,KAAA,CAAAgC,gBAAgB,GAAAlB,MAAA;IAAEa,WAAW,EAAC;iDAA9B3B,KAAA,CAAAgC,gBAAgB,E,mBAC5CnC,mBAAA,CAAkF;IAA3E4B,IAAI,EAAC,MAAM;+DAAUzB,KAAA,CAAAiC,iBAAiB,GAAAnB,MAAA;IAAEa,WAAW,EAAC;iDAA/B3B,KAAA,CAAAiC,iBAAiB,E,GAC7CC,UAAuB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}