{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport bookData from \"../../../src/json/CommentData.json\";\nexport default {\n  name: \"CommentsView\",\n  data() {\n    return {\n      book: bookData.book,\n      comments: bookData.comments,\n      replies: [],\n      newCommentAuthor: \"\",\n      newCommentContent: \"\",\n      replyCommentId: null,\n      newReplyAuthor: \"\",\n      newReplyContent: \"\"\n    };\n  },\n  computed: {\n    repliesByCommentId() {\n      // Group replies by comment id\n      const repliesByCommentId = {};\n      this.replies.forEach(reply => {\n        if (!repliesByCommentId[reply.commentId]) {\n          repliesByCommentId[reply.commentId] = [];\n        }\n        repliesByCommentId[reply.commentId].push(reply);\n      });\n      return repliesByCommentId;\n    }\n  },\n  methods: {\n    addComment() {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: this.newCommentAuthor,\n        content: this.newCommentContent\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n      this.newCommentAuthor = \"\";\n      this.newCommentContent = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment.id;\n    },\n    addReply(commentId) {\n      const newReply = {\n        id: this.replies.length + 1,\n        commentId: commentId,\n        author: this.newReplyAuthor,\n        content: this.newReplyContent,\n        editing: false\n      };\n      this.replies.push(newReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.newReplyAuthor = \"\";\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const index = this.replies.findIndex(reply => reply.id === replyId);\n      this.replies.splice(index, 1);\n      this.saveComments();\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      // Update replies array with new replies\n      const newReplies = this.replies.filter(reply => !reply.id);\n      newReplies.forEach(reply => reply.id = this.replies.length + 1);\n      this.replies.push(...newReplies);\n\n      // Update comments object with replies\n      const commentsWithReplies = this.comments.map(comment => {\n        return {\n          ...comment,\n          replies: this.replies.filter(reply => reply.commentId === comment.id)\n        };\n      });\n\n      // Save comments to storage\n      const updatedBookData = {\n        ...bookData,\n        comments: commentsWithReplies\n      };\n      localStorage.setItem(\"bookData\", JSON.stringify(updatedBookData));\n    }\n  },\n  mounted() {\n    // Load replies from storage\n    const savedReplies = JSON.parse(localStorage.getItem(\"replies\"));\n    if (savedReplies) {\n      this.replies = savedReplies;\n    }\n\n    // Load comments from storage\n    const savedBookData = JSON.parse(localStorage.getItem(\"bookData\"));\n    if (savedBookData) {\n      this.comments = savedBookData.comments;\n    }\n  },\n  watch: {\n    replies: {\n      handler: function (newReplies) {\n        localStorage.setItem(\"replies\", JSON.stringify(newReplies));\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["bookData","name","data","book","comments","replies","newCommentAuthor","newCommentContent","replyCommentId","newReplyAuthor","newReplyContent","computed","repliesByCommentId","forEach","reply","commentId","push","methods","addComment","newComment","id","length","author","content","saveComments","deleteComment","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","addReply","newReply","deleteReply","replyId","editReply","saveReply","cancelEditReply","newReplies","filter","commentsWithReplies","map","updatedBookData","localStorage","setItem","JSON","stringify","mounted","savedReplies","parse","getItem","savedBookData","watch","handler","deep"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in repliesByCommentId[comment.id]\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form v-if=\"comment.id === replyCommentId\" @submit.prevent=\"addReply(comment.id)\">\r\n          <input type=\"text\" v-model=\"newReplyAuthor\" placeholder=\"Your name...\" />\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <input type=\"text\" v-model=\"newCommentAuthor\" placeholder=\"Your name...\" />\r\n      <textarea v-model=\"newCommentContent\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport bookData from \"../../../src/json/CommentData.json\"\r\n\r\nexport default {\r\n  name: \"CommentsView\",\r\n  data() {\r\n    return {\r\n      book: bookData.book,\r\n      comments: bookData.comments,\r\n      replies: [],\r\n      newCommentAuthor: \"\",\r\n      newCommentContent: \"\",\r\n      replyCommentId: null,\r\n      newReplyAuthor: \"\",\r\n      newReplyContent: \"\"\r\n    }\r\n  },\r\n  computed: {\r\n    repliesByCommentId() {\r\n      // Group replies by comment id\r\n      const repliesByCommentId = {}\r\n      this.replies.forEach((reply) => {\r\n        if (!repliesByCommentId[reply.commentId]) {\r\n          repliesByCommentId[reply.commentId] = []\r\n        }\r\n        repliesByCommentId[reply.commentId].push(reply)\r\n      })\r\n      return repliesByCommentId\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: this.newCommentAuthor,\r\n        content: this.newCommentContent\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newCommentAuthor = \"\"\r\n      this.newCommentContent = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment.id\r\n    },\r\n    addReply(commentId) {\r\n      const newReply = {\r\n        id: this.replies.length + 1,\r\n        commentId: commentId,\r\n        author: this.newReplyAuthor,\r\n        content: this.newReplyContent,\r\n        editing: false\r\n      }\r\n      this.replies.push(newReply)\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.newReplyAuthor = \"\"\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const index = this.replies.findIndex((reply) => reply.id === replyId)\r\n      this.replies.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      // Update replies array with new replies\r\n      const newReplies = this.replies.filter((reply) => !reply.id)\r\n      newReplies.forEach((reply) => (reply.id = this.replies.length + 1))\r\n      this.replies.push(...newReplies)\r\n\r\n      // Update comments object with replies\r\n      const commentsWithReplies = this.comments.map((comment) => {\r\n        return {\r\n          ...comment,\r\n          replies: this.replies.filter((reply) => reply.commentId === comment.id)\r\n        }\r\n      })\r\n\r\n      // Save comments to storage\r\n      const updatedBookData = {\r\n        ...bookData,\r\n        comments: commentsWithReplies\r\n      }\r\n      localStorage.setItem(\"bookData\", JSON.stringify(updatedBookData))\r\n    }\r\n  },\r\n  mounted() {\r\n    // Load replies from storage\r\n    const savedReplies = JSON.parse(localStorage.getItem(\"replies\"))\r\n    if (savedReplies) {\r\n      this.replies = savedReplies\r\n    }\r\n\r\n    // Load comments from storage\r\n    const savedBookData = JSON.parse(localStorage.getItem(\"bookData\"))\r\n    if (savedBookData) {\r\n      this.comments = savedBookData.comments\r\n    }\r\n  },\r\n  watch: {\r\n    replies: {\r\n      handler: function (newReplies) {\r\n        localStorage.setItem(\"replies\", JSON.stringify(newReplies))\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}