{"ast":null,"code":"import Data from \"../../../src/json/CommentData.json\";\nimport { isAuthor, deleteComment, addReplyComment, deleteReply, handleCancelOrEdit, saveComments } from \"../../../src/Methods/CommentMethod.js\";\nimport CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\";\nimport \"../../../src/components/Commentlist/Comment.css\";\nimport { formatDate } from \"@/Methods/Methods\";\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    CommentForm\n  },\n  data() {\n    return {\n      comments: [{\n        ...Data.book\n      }],\n      replyCommentId: null,\n      newReplyContent: \"\",\n      newComment: \"\",\n      currentUser: \"Bảo\"\n    };\n  },\n  methods: {\n    formatDate,\n    isAuthor,\n    deleteComment,\n    addReplyComment,\n    deleteReply,\n    handleCancelOrEdit,\n    saveComments,\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(params) {\n      addReplyComment(params, this.newReplyContent, this.book, this.comments);\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    }\n  },\n  async created() {\n    console.log(this.comments);\n    console.log(this.book);\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["Data","isAuthor","deleteComment","addReplyComment","deleteReply","handleCancelOrEdit","saveComments","CommentForm","formatDate","name","props","book","type","Object","required","components","data","comments","replyCommentId","newReplyContent","newComment","currentUser","methods","showReplyForm","comment","addReply","params","created","console","log","jsonData","localStorage","getItem","JSON","parse"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"mt-5\">\r\n    <h2 class=\"title bg-dark\">Comments {{ book.title }}</h2>\r\n\r\n    <div v-for=\"commentArray in comments\" :key=\"commentArray.id\">\r\n      <!-- <div v-if=\"commentArray.id === this.book.id\"> -->\r\n      <div>{{ commentArray.title }}</div>\r\n      <!-- </div> -->\r\n    </div>\r\n    <CommentForm :comments=\"this.comments\" :book=\"this.book\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../../../src/json/CommentData.json\"\r\nimport { isAuthor, deleteComment, addReplyComment, deleteReply, handleCancelOrEdit, saveComments } from \"../../../src/Methods/CommentMethod.js\"\r\nimport CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\r\nimport \"../../../src/components/Commentlist/Comment.css\"\r\nimport { formatDate } from \"@/Methods/Methods\"\r\n\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  components: {\r\n    CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      comments: [{ ...Data.book }],\r\n      replyCommentId: null,\r\n      newReplyContent: \"\",\r\n      newComment: \"\",\r\n      currentUser: \"Bảo\"\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate,\r\n    isAuthor,\r\n    deleteComment,\r\n    addReplyComment,\r\n    deleteReply,\r\n    handleCancelOrEdit,\r\n    saveComments,\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(params) {\r\n      addReplyComment(params, this.newReplyContent, this.book, this.comments)\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    }\r\n  },\r\n  async created() {\r\n    console.log(this.comments)\r\n    console.log(this.book)\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAcA,OAAOA,IAAG,MAAO,oCAAmC;AACpD,SAASC,QAAQ,EAAEC,aAAa,EAAEC,eAAe,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,YAAW,QAAS,uCAAsC;AAC9I,OAAOC,WAAU,MAAO,qDAAoD;AAC5E,OAAO,iDAAgD;AACvD,SAASC,UAAS,QAAS,mBAAkB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,UAAU,EAAE;IACVR;EACF,CAAC;EACDS,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC;QAAE,GAAGjB,IAAI,CAACW;MAAK,CAAC,CAAC;MAC5BO,cAAc,EAAE,IAAI;MACpBC,eAAe,EAAE,EAAE;MACnBC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAE;IACPd,UAAU;IACVP,QAAQ;IACRC,aAAa;IACbC,eAAe;IACfC,WAAW;IACXC,kBAAkB;IAClBC,YAAY;IACZiB,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACN,cAAa,GAAIM,OAAM;IAC9B,CAAC;IACDC,QAAQA,CAACC,MAAM,EAAE;MACfvB,eAAe,CAACuB,MAAM,EAAE,IAAI,CAACP,eAAe,EAAE,IAAI,CAACR,IAAI,EAAE,IAAI,CAACM,QAAQ;MACtE,IAAI,CAACC,cAAa,GAAI,IAAG;MACzB,IAAI,CAACC,eAAc,GAAI,EAAC;IAC1B;EACF,CAAC;EACD,MAAMQ,OAAOA,CAAA,EAAG;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,QAAQ;IACzBW,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,IAAI;IACrB,MAAMmB,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU;IAChD,IAAIF,QAAQ,EAAE;MACZ,MAAMd,IAAG,GAAIiB,IAAI,CAACC,KAAK,CAACJ,QAAQ;MAChC,IAAI,CAACb,QAAO,GAAID,IAAI,CAACC,QAAO;IAC9B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}