{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport bookData from \"./book.json\";\nexport default {\n  name: \"CommentsView\",\n  data() {\n    return {\n      book: bookData.book,\n      comments: bookData.comments,\n      newCommentAuthor: \"\",\n      newCommentContent: \"\",\n      replyCommentId: null,\n      replyComment: null,\n      newReplyAuthor: \"\",\n      newReplyContent: \"\"\n    };\n  },\n  methods: {\n    addComment() {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: this.newCommentAuthor,\n        content: this.newCommentContent,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n      this.newCommentAuthor = \"\";\n      this.newCommentContent = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment.id;\n      this.replyComment = comment;\n    },\n    addReply(comment) {\n      const newReply = {\n        id: comment.replies.length + 1,\n        author: this.newReplyAuthor,\n        content: this.newReplyContent,\n        editing: false\n      };\n      comment.replies.push(newReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.replyComment = null;\n      this.newReplyAuthor = \"\";\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const comment = this.comments.find(comment => comment.id === commentId);\n      const index = comment.replies.findIndex(reply => reply.id === replyId);\n      comment.replies.splice(index, 1);\n      this.saveComments();\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        book: this.book,\n        comments: this.comments\n      };\n      localStorage.setItem(\"book-comments\", JSON.stringify(data));\n    }\n  },\n  created() {\n    const data = JSON.parse(localStorage.getItem(\"book-comments\"));\n    if (data) {\n      this.book = data.book;\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["bookData","name","data","book","comments","newCommentAuthor","newCommentContent","replyCommentId","replyComment","newReplyAuthor","newReplyContent","methods","addComment","newComment","id","length","author","content","replies","push","saveComments","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","addReply","newReply","deleteReply","replyId","find","reply","editReply","saveReply","cancelEditReply","localStorage","setItem","JSON","stringify","created","parse","getItem"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form v-if=\"comment.id === replyCommentId || comment === replyComment\">\r\n          <input type=\"text\" v-model=\"newReplyAuthor\" placeholder=\"Your name...\" />\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <input type=\"text\" v-model=\"newCommentAuthor\" placeholder=\"Your name...\" />\r\n      <textarea v-model=\"newCommentContent\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport bookData from \"./book.json\"\r\n\r\nexport default {\r\n  name: \"CommentsView\",\r\n  data() {\r\n    return {\r\n      book: bookData.book,\r\n      comments: bookData.comments,\r\n      newCommentAuthor: \"\",\r\n      newCommentContent: \"\",\r\n      replyCommentId: null,\r\n      replyComment: null,\r\n      newReplyAuthor: \"\",\r\n      newReplyContent: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: this.newCommentAuthor,\r\n        content: this.newCommentContent,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newCommentAuthor = \"\"\r\n      this.newCommentContent = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment.id\r\n      this.replyComment = comment\r\n    },\r\n    addReply(comment) {\r\n      const newReply = {\r\n        id: comment.replies.length + 1,\r\n        author: this.newReplyAuthor,\r\n        content: this.newReplyContent,\r\n        editing: false\r\n      }\r\n      comment.replies.push(newReply)\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.replyComment = null\r\n      this.newReplyAuthor = \"\"\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      const index = comment.replies.findIndex((reply) => reply.id === replyId)\r\n      comment.replies.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        book: this.book,\r\n        comments: this.comments\r\n      }\r\n      localStorage.setItem(\"book-comments\", JSON.stringify(data))\r\n    }\r\n  },\r\n  created() {\r\n    const data = JSON.parse(localStorage.getItem(\"book-comments\"))\r\n    if (data) {\r\n      this.book = data.book\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}