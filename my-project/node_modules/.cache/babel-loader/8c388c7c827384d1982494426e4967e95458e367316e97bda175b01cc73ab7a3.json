{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"author\"\n}, \"Name:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\"\n}, \"Comment:\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitComment && $options.submitComment(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"author\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.author = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.author]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"content\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.content = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", _hoisted_3, _toDisplayString($props.action), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","submitComment","_hoisted_1","id","$data","author","$event","required","_hoisted_2","content","_hoisted_3","_toDisplayString","$props","action"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\CommentForm.vue\\CommentForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitComment\">\r\n    <div>\r\n      <label for=\"author\">Name:</label>\r\n      <input type=\"text\" id=\"author\" v-model=\"author\" required />\r\n    </div>\r\n    <div>\r\n      <label for=\"content\">Comment:</label>\r\n      <textarea id=\"content\" v-model=\"content\" required></textarea>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">{{ action }}</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CommentForm\",\r\n  props: {\r\n    parentId: Number,\r\n    action: String\r\n  },\r\n  data() {\r\n    return {\r\n      author: \"\",\r\n      content: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    submitComment() {\r\n      const comment = {\r\n        id: comments.length + 1,\r\n        author: this.author,\r\n        content: this.content,\r\n        date: new Date().toISOString(),\r\n        replies: []\r\n      }\r\n      if (this.parentId) {\r\n        const parentComment = comments.find((comment) => comment.id === this.parentId)\r\n        if (!parentComment.replies) {\r\n          parentComment.replies = []\r\n        }\r\n        parentComment.replies.push(comment)\r\n      } else {\r\n        comments.push(comment)\r\n      }\r\n      this.$emit(\"submit\", comment)\r\n      this.author = \"\"\r\n      this.content = \"\"\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";gCAGMA,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAQ,GAAC,OAAK;gCAIzBD,mBAAA,CAAqC;EAA9BC,GAAG,EAAC;AAAS,GAAC,UAAQ;;EAIrBC,IAAI,EAAC;AAAQ;;uBAVzBC,mBAAA,CAYO;IAZAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCP,mBAAA,CAGM,cAFJU,UAAiC,E,gBACjCV,mBAAA,CAA2D;IAApDE,IAAI,EAAC,MAAM;IAACS,EAAE,EAAC,QAAQ;+DAAUC,KAAA,CAAAC,MAAM,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAARH,KAAA,CAAAC,MAAM,E,KAEhDb,mBAAA,CAGM,cAFJgB,UAAqC,E,gBACrChB,mBAAA,CAA6D;IAAnDW,EAAE,EAAC,SAAS;+DAAUC,KAAA,CAAAK,OAAO,GAAAH,MAAA;IAAEC,QAAQ,EAAR;iDAATH,KAAA,CAAAK,OAAO,E,KAEzCjB,mBAAA,CAEM,cADJA,mBAAA,CAA2C,UAA3CkB,UAA2C,EAAAC,gBAAA,CAAlBC,MAAA,CAAAC,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}