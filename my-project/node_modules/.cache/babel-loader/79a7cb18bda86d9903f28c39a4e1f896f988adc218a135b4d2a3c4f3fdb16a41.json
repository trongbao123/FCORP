{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Data from \"../../../src/json/CommentData.json\";\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    // CommentForm\n  },\n  data() {\n    return {\n      id: Data.book.id,\n      comments: Data.book,\n      replyCommentId: null,\n      newReplyContent: \"\",\n      newComment: \"\",\n      currentUser: \"Bảo\"\n    };\n  },\n  mounted() {},\n  methods: {\n    shouldShowComment() {\n      console.log(this.id);\n      console.log(this.book.id);\n      console.log(this.comments, \"ádasd\");\n      const commentFromLocal = JSON.parse(localStorage.getItem(\"comments\"));\n      if (!commentFromLocal) {\n        return true;\n      } else {\n        const filteredComments = commentFromLocal.comments.filter(item => {\n          console.log(item, \"ádasd\");\n          console.log(this.book.id);\n          return item.bookId === this.book.id;\n        });\n        console.log(filteredComments, \"tìm thấy \");\n        return filteredComments.length > 0;\n      }\n    },\n    isAuthor(currentUser, author) {\n      console.log(this.id);\n      console.log(this.comments);\n      return currentUser === author;\n    },\n    addComment() {\n      const newComment = {\n        bookId: this.book.id,\n        id: this.comments.length + 1,\n        author: \"Bảo\",\n        content: this.newComment,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n      this.newComment = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(params) {\n      const newCommentOrReply = {\n        id: params.id++,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        editing: false,\n        replies: []\n      };\n      params.replies.push(newCommentOrReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const deleteComment = comment => {\n        for (let i = 0; i < comment.replies.length; i++) {\n          const reply = comment.replies[i];\n          if (reply.id === replyId) {\n            comment.replies.splice(i, 1);\n            return true;\n          }\n          if (reply.replies && deleteComment(reply)) {\n            return true;\n          }\n        }\n        return false;\n      };\n      const comment = this.comments.find(comment => comment.id === commentId);\n      if (comment && deleteComment(comment)) {\n        this.saveComments();\n      }\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        ...this.book,\n        comments: this.comments\n      };\n      const jsonData = JSON.stringify(data);\n      localStorage.setItem(\"comments\", jsonData);\n    }\n  },\n  created() {\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["Data","name","props","book","type","Object","required","components","data","id","comments","replyCommentId","newReplyContent","newComment","currentUser","mounted","methods","shouldShowComment","console","log","commentFromLocal","JSON","parse","localStorage","getItem","filteredComments","filter","item","bookId","length","isAuthor","author","addComment","content","replies","push","saveComments","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","addReply","params","newCommentOrReply","deleteReply","replyId","i","reply","find","editReply","saveReply","cancelEditReply","jsonData","stringify","setItem","created"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments.comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button v-if=\"isAuthor(this.currentUser, comment.author)\" @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button v-if=\"isAuthor(this.currentUser, reply.author)\" @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button v-if=\"isAuthor(this.currentUser, reply1.author)\" @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n\r\n        <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newComment\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n    <!-- <CommentForm :newReplyContent=\"newReplyContent\" :@submit.prevent=\"addComment\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../../../src/json/CommentData.json\"\r\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  components: {\r\n    // CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      id: Data.book.id,\r\n      comments: Data.book,\r\n      replyCommentId: null,\r\n      newReplyContent: \"\",\r\n      newComment: \"\",\r\n      currentUser: \"Bảo\"\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    shouldShowComment() {\r\n      console.log(this.id)\r\n      console.log(this.book.id)\r\n      console.log(this.comments, \"ádasd\")\r\n      const commentFromLocal = JSON.parse(localStorage.getItem(\"comments\"))\r\n\r\n      if (!commentFromLocal) {\r\n        return true\r\n      } else {\r\n        const filteredComments = commentFromLocal.comments.filter((item) => {\r\n          console.log(item, \"ádasd\")\r\n          console.log(this.book.id)\r\n          return item.bookId === this.book.id\r\n        })\r\n        console.log(filteredComments, \"tìm thấy \")\r\n\r\n        return filteredComments.length > 0\r\n      }\r\n    },\r\n    isAuthor(currentUser, author) {\r\n      console.log(this.id)\r\n      console.log(this.comments)\r\n      return currentUser === author\r\n    },\r\n    addComment() {\r\n      const newComment = {\r\n        bookId: this.book.id,\r\n        id: this.comments.length + 1,\r\n        author: \"Bảo\",\r\n        content: this.newComment,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newComment = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(params) {\r\n      const newCommentOrReply = {\r\n        id: params.id++,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        editing: false,\r\n        replies: []\r\n      }\r\n      params.replies.push(newCommentOrReply)\r\n\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const deleteComment = (comment) => {\r\n        for (let i = 0; i < comment.replies.length; i++) {\r\n          const reply = comment.replies[i]\r\n          if (reply.id === replyId) {\r\n            comment.replies.splice(i, 1)\r\n            return true\r\n          }\r\n          if (reply.replies && deleteComment(reply)) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      if (comment && deleteComment(comment)) {\r\n        this.saveComments()\r\n      }\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        ...this.book,\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}