{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Reply\", -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Comment\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.submitForm && _ctx.submitForm(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    id: \"content\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newReplyContent = $event),\n    placeholder: \"Write comment .....\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newReplyContent]]), _ctx.showReply ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6))], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","type","_hoisted_2","_hoisted_5","_createElementBlock","onSubmit","_cache","_withModifiers","args","_ctx","submitForm","id","newReplyContent","$event","placeholder","required","showReply","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_6"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\CommentForm\\CommentForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitForm\">\r\n    <textarea id=\"content\" v-model=\"newReplyContent\" placeholder=\"Write comment .....\" required></textarea>\r\n\r\n    <div v-if=\"showReply\">\r\n      <button type=\"submit\">Reply</button>\r\n    </div>\r\n    <div v-else>\r\n      <button type=\"submit\">Comment</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"CommentForm\",\r\n  props: {\r\n    showReply: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    addComment: Function,\r\n    addReply: Function,\r\n    newReplyContent: String\r\n  },\r\n  setup(props) {\r\n    const newReplyContentRef = ref(props.newReplyContent)\r\n\r\n    function submitForm() {\r\n      if (props.showReply) {\r\n        props.addReply(newReplyContentRef.value)\r\n      } else {\r\n        props.addComment(newReplyContentRef.value)\r\n      }\r\n      newReplyContentRef.value = \"\"\r\n    }\r\n\r\n    // sử dụng watch để theo dõi giá trị của v-model và cập nhật giá trị của biến newReplyContentRef\r\n    watch(\r\n      () => props.newReplyContent,\r\n      (newVal) => {\r\n        newReplyContentRef.value = newVal\r\n      }\r\n    )\r\n\r\n    return {\r\n      newReplyContentRef, // sử dụng newReplyContent để bind với v-model trên textarea\r\n      submitForm\r\n    }\r\n  }\r\n})\r\n</script>\r\n"],"mappings":";;;;gCAKMA,mBAAA,CAAoC;EAA5BC,IAAI,EAAC;AAAQ,GAAC,OAAK;oBAA3BC,UAAoC,C;;;;gCAGpCF,mBAAA,CAAsC;EAA9BC,IAAI,EAAC;AAAQ,GAAC,SAAO;oBAA7BE,UAAsC,C;;uBAP1CC,mBAAA,CASO;IATAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BR,mBAAA,CAAuG;IAA7FW,EAAE,EAAC,SAAS;+DAAUF,IAAA,CAAAG,eAAe,GAAAC,MAAA;IAAEC,WAAW,EAAC,qBAAqB;IAACC,QAAQ,EAAR;iDAAnDN,IAAA,CAAAG,eAAe,E,GAEpCH,IAAA,CAAAO,SAAS,I,cAApBZ,mBAAA,CAEM,OAAAa,UAAA,EAAAC,UAAA,M,cACNd,mBAAA,CAEM,OAAAe,UAAA,EAAAC,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}