{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CommentForm from \"../../../src/CommentForm/CommentForm.vue\";\nimport bookData from \"../../../src/json/CommentData.json\";\nexport default {\n  name: \"CommentsView\",\n  components: {\n    CommentForm\n  },\n  data() {\n    return {\n      comments: bookData.comments,\n      replyCommentId: null\n    };\n  },\n  methods: {\n    addComment(content) {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: \"Bảo\",\n        content,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(comment, content) {\n      const newReply = {\n        id: comment.replies.length + 1,\n        author: \"Bảo\",\n        content,\n        editing: false,\n        replies: []\n      };\n      comment.replies.push(newReply);\n      this.saveComments();\n      this.replyCommentId = null;\n    },\n    deleteReply(commentId, replyId) {\n      const comment = this.comments.find(comment => comment.id === commentId);\n      const index = comment.replies.findIndex(reply => reply.id === replyId);\n      comment.replies.splice(index, 1);\n      this.saveComments();\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        book: this.book,\n        comments: this.comments\n      };\n      const jsonData = JSON.stringify(data);\n      localStorage.setItem(\"comments\", jsonData);\n    }\n  },\n  created() {\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      this.book = data.book;\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["CommentForm","bookData","name","components","data","comments","replyCommentId","methods","addComment","content","newComment","id","length","author","replies","push","saveComments","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","addReply","newReply","deleteReply","replyId","find","reply","editReply","saveReply","cancelEditReply","book","jsonData","JSON","stringify","localStorage","setItem","created","getItem","parse"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <comment-form :is-reply=\"true\" @submit=\"addReply(reply, $event)\" @cancel=\"replyCommentId = null\"></comment-form>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n\r\n        <comment-form @submit=\"addComment($event)\"></comment-form>\r\n\r\n        <comment-form v-if=\"replyCommentId\" :is-reply=\"true\" @submit=\"addReply(replyCommentId, $event)\" @cancel=\"replyCommentId = null\"></comment-form>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CommentForm from \"../../../src/CommentForm/CommentForm.vue\"\r\nimport bookData from \"../../../src/json/CommentData.json\"\r\n\r\nexport default {\r\n  name: \"CommentsView\",\r\n  components: {\r\n    CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      comments: bookData.comments,\r\n      replyCommentId: null\r\n    }\r\n  },\r\n  methods: {\r\n    addComment(content) {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: \"Bảo\",\r\n        content,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(comment, content) {\r\n      const newReply = {\r\n        id: comment.replies.length + 1,\r\n        author: \"Bảo\",\r\n        content,\r\n        editing: false,\r\n        replies: []\r\n      }\r\n      comment.replies.push(newReply)\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      const index = comment.replies.findIndex((reply) => reply.id === replyId)\r\n      comment.replies.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        book: this.book,\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.book = data.book\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}