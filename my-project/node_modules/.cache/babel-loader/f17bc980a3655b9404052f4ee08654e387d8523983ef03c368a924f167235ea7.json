{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"book-page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Book = _resolveComponent(\"Book\");\n  const _component_comment_list = _resolveComponent(\"comment-list\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Book), _createVNode(_component_comment_list, {\n    comments: $data.comments,\n    onAddComment: $options.addComment,\n    onAddReply: $options.addReply\n  }, null, 8 /* PROPS */, [\"comments\", \"onAddComment\", \"onAddReply\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Book","_component_comment_list","comments","$data","onAddComment","$options","addComment","onAddReply","addReply"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\page\\BookPage\\BookPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-page\">\r\n    <Book></Book>\r\n    <comment-list :comments=\"comments\" @add-comment=\"addComment\" @add-reply=\"addReply\"></comment-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Book from \"../../src/components/Book/Book.vue\"\r\nimport CommentList from \"../CommentList.vue\"\r\n\r\nexport default {\r\n  name: \"BookPage\",\r\n  components: {\r\n    Book,\r\n    CommentList\r\n  },\r\n  data() {\r\n    return {\r\n      comments: [\r\n        {\r\n          id: 1,\r\n          author: \"John Doe\",\r\n          content: \"This book is great!\",\r\n          date: new Date(),\r\n          replies: []\r\n        },\r\n        {\r\n          id: 2,\r\n          author: \"Jane Doe\",\r\n          content: \"I agree, this book is amazing!\",\r\n          date: new Date(),\r\n          replies: []\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    addComment(comment) {\r\n      const id = this.comments.length + 1\r\n      this.comments.push({\r\n        id,\r\n        ...comment,\r\n        replies: []\r\n      })\r\n    },\r\n    addReply(commentId, reply) {\r\n      const comment = this.comments.find((c) => c.id === commentId)\r\n      if (comment) {\r\n        const id = comment.replies.length + 1\r\n        comment.replies.push({\r\n          id,\r\n          ...reply\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.book-page {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;;;uBAAtBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAaC,eAAA,GACbD,YAAA,CAAkGE,uBAAA;IAAnFC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,YAAW,EAAEC,QAAA,CAAAC,UAAU;IAAGC,UAAS,EAAEF,QAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}