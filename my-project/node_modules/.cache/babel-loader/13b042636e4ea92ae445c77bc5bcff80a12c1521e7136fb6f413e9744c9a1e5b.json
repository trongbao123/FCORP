{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      comments: [],\n      newComment: \"\",\n      newReplyContent: \"\",\n      replyCommentId: null,\n      currentUser: \"John\",\n      book: {\n        title: \"The Great Gatsby\",\n        author: \"F. Scott Fitzgerald\"\n      }\n    };\n  },\n  methods: {\n    addComment() {\n      const newComment = {\n        id: Date.now(),\n        author: this.currentUser,\n        content: this.newComment,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.newComment = \"\";\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(comment, reply) {\n      const newReply = {\n        id: Date.now(),\n        author: this.currentUser,\n        content: this.newReplyContent,\n        replies: []\n      };\n      if (reply) {\n        reply.replies.push(newReply);\n      } else {\n        comment.replies.push(newReply);\n      }\n      this.newReplyContent = \"\";\n      this.replyCommentId = null;\n    },\n    deleteComment(commentId) {\n      this.comments = this.comments.filter(comment => comment.id !== commentId);\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    deleteReply(commentId, replyId) {\n      const comment = this.comments.find(comment => comment.id === commentId);\n      comment.replies = comment.replies.filter(reply => reply.id !== replyId);\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    isAuthor(currentUser, author) {\n      return currentUser === author;\n    },\n    shouldShowComment() {\n      return this.comments.length > 0;\n    }\n  }\n};","map":{"version":3,"names":["data","comments","newComment","newReplyContent","replyCommentId","currentUser","book","title","author","methods","addComment","id","Date","now","content","replies","push","showReplyForm","comment","addReply","reply","newReply","deleteComment","commentId","filter","editComment","editing","saveComment","cancelEditComment","deleteReply","replyId","find","editReply","saveReply","cancelEditReply","isAuthor","shouldShowComment","length"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\" v-show=\"shouldShowComment()\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button v-if=\"isAuthor(this.currentUser, comment.author)\" @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button v-if=\"isAuthor(this.currentUser, reply.author)\" @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(comment, reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button v-if=\"isAuthor(this.currentUser, reply1.author)\" @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(comment, reply1)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n\r\n        <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newComment\" placeholder=\"Write a comment...\" :rows=\"5\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      comments: [],\r\n      newComment: \"\",\r\n      newReplyContent: \"\",\r\n      replyCommentId: null,\r\n      currentUser: \"John\",\r\n      book: {\r\n        title: \"The Great Gatsby\",\r\n        author: \"F. Scott Fitzgerald\"\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: Date.now(),\r\n        author: this.currentUser,\r\n        content: this.newComment,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.newComment = \"\"\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(comment, reply) {\r\n      const newReply = {\r\n        id: Date.now(),\r\n        author: this.currentUser,\r\n        content: this.newReplyContent,\r\n        replies: []\r\n      }\r\n      if (reply) {\r\n        reply.replies.push(newReply)\r\n      } else {\r\n        comment.replies.push(newReply)\r\n      }\r\n      this.newReplyContent = \"\"\r\n      this.replyCommentId = null\r\n    },\r\n    deleteComment(commentId) {\r\n      this.comments = this.comments.filter((comment) => comment.id !== commentId)\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      comment.replies = comment.replies.filter((reply) => reply.id !== replyId)\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    isAuthor(currentUser, author) {\r\n      return currentUser === author\r\n    },\r\n    shouldShowComment() {\r\n      return this.comments.length > 0\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAmEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,MAAM;MACnBC,IAAI,EAAE;QACJC,KAAK,EAAE,kBAAkB;QACzBC,MAAM,EAAE;MACV;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMR,UAAS,GAAI;QACjBS,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdL,MAAM,EAAE,IAAI,CAACH,WAAW;QACxBS,OAAO,EAAE,IAAI,CAACZ,UAAU;QACxBa,OAAO,EAAE;MACX;MACA,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACd,UAAU;MAC7B,IAAI,CAACA,UAAS,GAAI,EAAC;IACrB,CAAC;IACDe,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACd,cAAa,GAAIc,OAAM;IAC9B,CAAC;IACDC,QAAQA,CAACD,OAAO,EAAEE,KAAK,EAAE;MACvB,MAAMC,QAAO,GAAI;QACfV,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdL,MAAM,EAAE,IAAI,CAACH,WAAW;QACxBS,OAAO,EAAE,IAAI,CAACX,eAAe;QAC7BY,OAAO,EAAE;MACX;MACA,IAAIK,KAAK,EAAE;QACTA,KAAK,CAACL,OAAO,CAACC,IAAI,CAACK,QAAQ;MAC7B,OAAO;QACLH,OAAO,CAACH,OAAO,CAACC,IAAI,CAACK,QAAQ;MAC/B;MACA,IAAI,CAAClB,eAAc,GAAI,EAAC;MACxB,IAAI,CAACC,cAAa,GAAI,IAAG;IAC3B,CAAC;IACDkB,aAAaA,CAACC,SAAS,EAAE;MACvB,IAAI,CAACtB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACuB,MAAM,CAAEN,OAAO,IAAKA,OAAO,CAACP,EAAC,KAAMY,SAAS;IAC5E,CAAC;IACDE,WAAWA,CAACP,OAAO,EAAE;MACnBA,OAAO,CAACQ,OAAM,GAAI,IAAG;IACvB,CAAC;IACDC,WAAWA,CAACT,OAAO,EAAE;MACnBA,OAAO,CAACQ,OAAM,GAAI,KAAI;IACxB,CAAC;IACDE,iBAAiBA,CAACV,OAAO,EAAE;MACzBA,OAAO,CAACQ,OAAM,GAAI,KAAI;IACxB,CAAC;IACDG,WAAWA,CAACN,SAAS,EAAEO,OAAO,EAAE;MAC9B,MAAMZ,OAAM,GAAI,IAAI,CAACjB,QAAQ,CAAC8B,IAAI,CAAEb,OAAO,IAAKA,OAAO,CAACP,EAAC,KAAMY,SAAS;MACxEL,OAAO,CAACH,OAAM,GAAIG,OAAO,CAACH,OAAO,CAACS,MAAM,CAAEJ,KAAK,IAAKA,KAAK,CAACT,EAAC,KAAMmB,OAAO;IAC1E,CAAC;IACDE,SAASA,CAACZ,KAAK,EAAE;MACfA,KAAK,CAACM,OAAM,GAAI,IAAG;IACrB,CAAC;IACDO,SAASA,CAACb,KAAK,EAAE;MACfA,KAAK,CAACM,OAAM,GAAI,KAAI;IACtB,CAAC;IACDQ,eAAeA,CAACd,KAAK,EAAE;MACrBA,KAAK,CAACM,OAAM,GAAI,KAAI;IACtB,CAAC;IACDS,QAAQA,CAAC9B,WAAW,EAAEG,MAAM,EAAE;MAC5B,OAAOH,WAAU,KAAMG,MAAK;IAC9B,CAAC;IACD4B,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACnC,QAAQ,CAACoC,MAAK,GAAI;IAChC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}