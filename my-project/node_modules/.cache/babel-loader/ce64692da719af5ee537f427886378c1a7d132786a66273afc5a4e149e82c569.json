{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport bookData from \"../../../src/json/CommentData.json\";\nexport default {\n  name: \"CommentsView\",\n  data() {\n    return {\n      comments: bookData.comments,\n      newCommentContent: \"\",\n      replyCommentId: null,\n      newReplyAuthor: \"\",\n      newReplyContent: \"\"\n    };\n  },\n  methods: {\n    addComment() {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: \"Bảo\",\n        content: this.newCommentContent,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n      this.newCommentContent = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      console.log(comment);\n      console.log(this.replyCommentId);\n      this.replyCommentId = comment;\n    },\n    addReply(comment) {\n      const newReply = {\n        id: comment.replies.length + 1,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        editing: false\n      };\n      const index = this.comments.findIndex(cmt => cmt.id === comment.id);\n      this.comments[index].replies.push(newReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const comment = this.comments.find(comment => comment.id === commentId);\n      const index = comment.replies.findIndex(reply => reply.id === replyId);\n      comment.replies.splice(index, 1);\n      this.saveComments();\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        book: this.book,\n        comments: this.comments\n      };\n      const jsonData = JSON.stringify(data);\n      localStorage.setItem(\"comments\", jsonData);\n    }\n  },\n  created() {\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      this.book = data.book;\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["bookData","name","data","comments","newCommentContent","replyCommentId","newReplyAuthor","newReplyContent","methods","addComment","newComment","id","length","author","content","replies","push","saveComments","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","console","log","addReply","newReply","cmt","deleteReply","replyId","find","reply","editReply","saveReply","cancelEditReply","book","jsonData","JSON","stringify","localStorage","setItem","created","getItem","parse"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n          </li>\r\n        </ul>\r\n        <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newCommentContent\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport bookData from \"../../../src/json/CommentData.json\"\r\n\r\nexport default {\r\n  name: \"CommentsView\",\r\n  data() {\r\n    return {\r\n      comments: bookData.comments,\r\n      newCommentContent: \"\",\r\n      replyCommentId: null,\r\n      newReplyAuthor: \"\",\r\n      newReplyContent: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: \"Bảo\",\r\n        content: this.newCommentContent,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newCommentContent = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      console.log(comment)\r\n      console.log(this.replyCommentId)\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(comment) {\r\n      const newReply = {\r\n        id: comment.replies.length + 1,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        editing: false\r\n      }\r\n      const index = this.comments.findIndex((cmt) => cmt.id === comment.id)\r\n      this.comments[index].replies.push(newReply)\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      const index = comment.replies.findIndex((reply) => reply.id === replyId)\r\n      comment.replies.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        book: this.book,\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.book = data.book\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}