{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Data from \"../../../src/json/CommentData.json\";\nimport { isAuthor, addComment, deleteComment } from \"../../../src/Methods/CommentMethod.js\";\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    // CommentForm\n  },\n  data() {\n    return {\n      comments: Data.book.comments,\n      replyCommentId: null,\n      newReplyContent: \"\",\n      newComment: \"\",\n      currentUser: \"Bảo\"\n    };\n  },\n  mounted() {},\n  methods: {\n    isAuthor,\n    addComment,\n    deleteComment,\n    // addComment() {\n    //   const newComment = {\n    //     bookId: this.book.id,\n    //     id: this.comments.length + 1,\n    //     author: \"Bảo\",\n    //     content: this.newComment,\n    //     replies: []\n    //   }\n    //   if (this.book.id) {\n    //     this.comments.push(newComment)\n    //     this.saveComments()\n    //   }\n\n    //   this.newComment = \"\"\n    // },\n    // deleteComment(commentId) {\n    //   const index = this.comments.findIndex((comment) => comment.id === commentId)\n    //   this.comments.splice(index, 1)\n    //   this.saveComments()\n    // },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(params) {\n      const newCommentOrReply = {\n        id: params.id++,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        editing: false,\n        replies: []\n      };\n      params.replies.push(newCommentOrReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const deleteComment = comment => {\n        for (let i = 0; i < comment.replies.length; i++) {\n          const reply = comment.replies[i];\n          if (reply.id === replyId) {\n            comment.replies.splice(i, 1);\n            return true;\n          }\n          if (reply.replies && deleteComment(reply)) {\n            return true;\n          }\n        }\n        return false;\n      };\n      const comment = this.comments.find(comment => comment.id === commentId);\n      if (comment && deleteComment(comment)) {\n        this.saveComments();\n      }\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        ...this.book,\n        comments: this.comments\n      };\n      const jsonData = JSON.stringify(data);\n      localStorage.setItem(\"comments\", jsonData);\n    }\n  },\n  created() {\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["Data","isAuthor","addComment","deleteComment","name","props","book","type","Object","required","components","data","comments","replyCommentId","newReplyContent","newComment","currentUser","mounted","methods","editComment","comment","editing","saveComment","saveComments","cancelEditComment","showReplyForm","addReply","params","newCommentOrReply","id","author","content","replies","push","deleteReply","commentId","replyId","i","length","reply","splice","find","editReply","saveReply","cancelEditReply","jsonData","JSON","stringify","localStorage","setItem","created","getItem","parse"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <div>\r\n      <div v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div v-if=\"comment.bookId === this.book.id\">\r\n          <div class=\"ml-5\">\r\n            <strong>{{ comment.author }}</strong>\r\n            <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n            <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n            <button v-if=\"isAuthor(this.currentUser, comment.author)\" @click=\"deleteComment(this.comments, comment.id)\">Delete</button>\r\n            <button @click=\"showReplyForm(comment)\">Reply</button>\r\n            <button v-if=\"!comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"editComment(comment)\">Edit</button>\r\n            <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"saveComment(comment)\">Save</button>\r\n            <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n          </div>\r\n          <div class=\"ml-5 pl-5\" v-if=\"comment.bookId === this.book.id\">\r\n            <div v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n              <div>\r\n                <strong>{{ reply.author }}</strong>\r\n                <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n                <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n                <button @click=\"showReplyForm(reply)\">Reply</button>\r\n                <button v-if=\"isAuthor(this.currentUser, reply.author)\" @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n                <button v-if=\"!reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"editReply(reply)\">Edit</button>\r\n                <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"saveReply(reply)\">Save</button>\r\n                <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n              </div>\r\n              <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                <button>Submit</button>\r\n              </form>\r\n              <div class=\"pl-5\">\r\n                <div v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                  <div>\r\n                    <strong>{{ reply1.author }}</strong>\r\n                    <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                    <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                    <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                    <button v-if=\"isAuthor(this.currentUser, reply1.author)\" @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                    <button v-if=\"!reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"editReply(reply1)\">Edit</button>\r\n                    <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"saveReply(reply1)\">Save</button>\r\n                    <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                  </div>\r\n                  <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                    <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                    <button>Submit</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n            <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n            <button>Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <form>\r\n      <textarea v-model=\"newComment\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button @click=\"addComment(this.book, this.comments, this.newComment)\">Submit</button>\r\n    </form>\r\n    <!-- <CommentForm :newReplyContent=\"newReplyContent\" :@submit.prevent=\"addComment\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../../../src/json/CommentData.json\"\r\nimport { isAuthor, addComment, deleteComment } from \"../../../src/Methods/CommentMethod.js\"\r\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  components: {\r\n    // CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      comments: Data.book.comments,\r\n      replyCommentId: null,\r\n      newReplyContent: \"\",\r\n      newComment: \"\",\r\n      currentUser: \"Bảo\"\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    isAuthor,\r\n    addComment,\r\n    deleteComment,\r\n    // addComment() {\r\n    //   const newComment = {\r\n    //     bookId: this.book.id,\r\n    //     id: this.comments.length + 1,\r\n    //     author: \"Bảo\",\r\n    //     content: this.newComment,\r\n    //     replies: []\r\n    //   }\r\n    //   if (this.book.id) {\r\n    //     this.comments.push(newComment)\r\n    //     this.saveComments()\r\n    //   }\r\n\r\n    //   this.newComment = \"\"\r\n    // },\r\n    // deleteComment(commentId) {\r\n    //   const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n    //   this.comments.splice(index, 1)\r\n    //   this.saveComments()\r\n    // },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(params) {\r\n      const newCommentOrReply = {\r\n        id: params.id++,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        editing: false,\r\n        replies: []\r\n      }\r\n      params.replies.push(newCommentOrReply)\r\n\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const deleteComment = (comment) => {\r\n        for (let i = 0; i < comment.replies.length; i++) {\r\n          const reply = comment.replies[i]\r\n          if (reply.id === replyId) {\r\n            comment.replies.splice(i, 1)\r\n            return true\r\n          }\r\n          if (reply.replies && deleteComment(reply)) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      if (comment && deleteComment(comment)) {\r\n        this.saveComments()\r\n      }\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        ...this.book,\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}