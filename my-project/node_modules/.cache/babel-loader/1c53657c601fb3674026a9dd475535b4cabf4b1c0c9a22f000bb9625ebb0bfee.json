{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"CommentForm\",\n  props: {\n    parentId: Number,\n    action: String\n  },\n  data() {\n    return {\n      author: \"\",\n      content: \"\"\n    };\n  },\n  methods: {\n    submitComment() {\n      const comment = {\n        id: comments.length + 1,\n        author: this.author,\n        content: this.content,\n        date: new Date().toISOString(),\n        replies: []\n      };\n      if (this.parentId) {\n        const parentComment = comments.find(comment => comment.id === this.parentId);\n        if (!parentComment.replies) {\n          parentComment.replies = [];\n        }\n        parentComment.replies.push(comment);\n      } else {\n        comments.push(comment);\n      }\n      this.$emit(\"submit\", comment);\n      this.author = \"\";\n      this.content = \"\";\n    }\n  }\n};","map":{"version":3,"names":["name","props","parentId","Number","action","String","data","author","content","methods","submitComment","comment","id","comments","length","date","Date","toISOString","replies","parentComment","find","push","$emit"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\CommentForm.vue\\CommentForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitComment\">\r\n    <div>\r\n      <label for=\"author\">Name:</label>\r\n      <input type=\"text\" id=\"author\" v-model=\"author\" required />\r\n    </div>\r\n    <div>\r\n      <label for=\"content\">Comment:</label>\r\n      <textarea id=\"content\" v-model=\"content\" required></textarea>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">{{ action }}</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CommentForm\",\r\n  props: {\r\n    parentId: Number,\r\n    action: String\r\n  },\r\n  data() {\r\n    return {\r\n      author: \"\",\r\n      content: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    submitComment() {\r\n      const comment = {\r\n        id: comments.length + 1,\r\n        author: this.author,\r\n        content: this.content,\r\n        date: new Date().toISOString(),\r\n        replies: []\r\n      }\r\n      if (this.parentId) {\r\n        const parentComment = comments.find((comment) => comment.id === this.parentId)\r\n        if (!parentComment.replies) {\r\n          parentComment.replies = []\r\n        }\r\n        parentComment.replies.push(comment)\r\n      } else {\r\n        comments.push(comment)\r\n      }\r\n      this.$emit(\"submit\", comment)\r\n      this.author = \"\"\r\n      this.content = \"\"\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAiBA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,QAAQ,EAAEC,MAAM;IAChBC,MAAM,EAAEC;EACV,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,MAAMC,OAAM,GAAI;QACdC,EAAE,EAAEC,QAAQ,CAACC,MAAK,GAAI,CAAC;QACvBP,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBO,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC9BC,OAAO,EAAE;MACX;MACA,IAAI,IAAI,CAAChB,QAAQ,EAAE;QACjB,MAAMiB,aAAY,GAAIN,QAAQ,CAACO,IAAI,CAAET,OAAO,IAAKA,OAAO,CAACC,EAAC,KAAM,IAAI,CAACV,QAAQ;QAC7E,IAAI,CAACiB,aAAa,CAACD,OAAO,EAAE;UAC1BC,aAAa,CAACD,OAAM,GAAI,EAAC;QAC3B;QACAC,aAAa,CAACD,OAAO,CAACG,IAAI,CAACV,OAAO;MACpC,OAAO;QACLE,QAAQ,CAACQ,IAAI,CAACV,OAAO;MACvB;MACA,IAAI,CAACW,KAAK,CAAC,QAAQ,EAAEX,OAAO;MAC5B,IAAI,CAACJ,MAAK,GAAI,EAAC;MACf,IAAI,CAACC,OAAM,GAAI,EAAC;IAClB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}