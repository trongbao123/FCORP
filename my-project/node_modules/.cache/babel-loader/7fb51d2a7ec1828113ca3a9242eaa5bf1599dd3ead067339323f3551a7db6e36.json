{"ast":null,"code":"import Data from \"../../../src/json/CommentData.json\";\nimport { isAuthor, deleteComment, addReplyComment, deleteReply, handleCancelOrEdit, saveComments } from \"../../../src/Methods/CommentMethod.js\";\nimport CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\";\nimport \"../../../src/components/Commentlist/Comment.css\";\nimport { formatDate } from \"@/Methods/Methods\";\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    CommentForm\n  },\n  data() {\n    return {\n      comments: Data.book.comments,\n      replyCommentId: null,\n      newReplyContent: \"\",\n      newComment: \"\",\n      currentUser: \"Bảo\",\n      showForm: false\n    };\n  },\n  created() {\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      this.comments = data.comments;\n    }\n  },\n  methods: {\n    formatDate,\n    isAuthor,\n    deleteComment,\n    addReplyComment,\n    deleteReply,\n    handleCancelOrEdit,\n    saveComments,\n    showReplyForm(comment) {\n      if (comment) {\n        return this.replyCommentId = comment;\n      }\n      return this.replyCommentId = !this.replyCommentId;\n    },\n    addReply(params) {\n      addReplyComment(params, this.newReplyContent, this.book, this.comments);\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    toggleForm() {\n      this.showForm = !this.showForm;\n    }\n  }\n};","map":{"version":3,"names":["Data","isAuthor","deleteComment","addReplyComment","deleteReply","handleCancelOrEdit","saveComments","CommentForm","formatDate","name","props","book","type","Object","required","components","data","comments","replyCommentId","newReplyContent","newComment","currentUser","showForm","created","jsonData","localStorage","getItem","JSON","parse","methods","showReplyForm","comment","addReply","params","toggleForm"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <div>\r\n      <div v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div v-if=\"comment.bookId === this.book.id\">\r\n          <div class=\"comment-Form\">\r\n            <div class=\"title-form\">\r\n              <p class=\"avatar\">{{ comment.author.charAt(0) }}</p>\r\n              <p class=\"day\">{{ formatDate(comment.PublishDate) }}</p>\r\n            </div>\r\n\r\n            <p class=\"comment\" v-if=\"!comment.editing\">{{ comment.content }}</p>\r\n            <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n            <div class=\"comment-flex\">\r\n              <div class=\"comment-flex\" @click=\"showReplyForm(comment)\">\r\n                <img class=\"icon\" src=\"https://cdn-icons-png.flaticon.com/128/10191/10191794.png\" />\r\n                <p>Reply</p>\r\n              </div>\r\n              <div class=\"comment-flex\" v-if=\"!comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"handleCancelOrEdit(comment, 0)\">\r\n                <img class=\"icon\" src=\"https://cdn-icons-png.flaticon.com/128/1159/1159633.png\" />\r\n                <p>Edit</p>\r\n              </div>\r\n              <div class=\"comment-flex\" v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"saveComments(this.book, this.comments, comment)\">\r\n                <img class=\"icon\" src=\"https://cdn-icons-png.flaticon.com/128/3580/3580085.png\" />\r\n                <p>Save</p>\r\n              </div>\r\n              <div class=\"comment-flex\" v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"handleCancelOrEdit(comment, 1)\">\r\n                <img class=\"icon\" src=\"https://cdn-icons-png.flaticon.com/128/561/561189.png\" />\r\n                <p>Cancel</p>\r\n              </div>\r\n              <div class=\"comment-flex\" v-if=\"isAuthor(this.currentUser, comment.author)\" @click=\"deleteComment(this.comments, comment.id)\">\r\n                <img class=\"icon\" src=\"https://cdn-icons-png.flaticon.com/128/484/484662.png\" />\r\n                <p>Delete</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <form class=\"form-comment\" v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n            <textarea class=\"comment-text\" v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\" required></textarea>\r\n            <div class=\"d-flex\">\r\n              <button class=\"submit\">SAVE</button>\r\n              <button class=\"cancel\" @click=\"handleCancelOrEdit(comment, 1)\">Cancel</button>\r\n            </div>\r\n          </form>\r\n          <div class=\"comment-Form1 pl-5\">\r\n            <div v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n              <div>\r\n                <strong>{{ reply.author }}</strong>\r\n                <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n                <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n                <button @click=\"showReplyForm(reply)\">Reply</button>\r\n                <button v-if=\"isAuthor(this.currentUser, reply.author)\" @click=\"deleteReply(comment.id, reply.id, this.book, this.comments)\">Delete</button>\r\n                <button v-if=\"!reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"edit(reply, 0)\">Edit</button>\r\n                <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"saveComments(this.book, this.comments, reply)\">Save</button>\r\n                <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"handleCancelOrEdit(reply, 1)\">Cancel</button>\r\n                <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </div>\r\n\r\n              <div class=\"pl-5\">\r\n                <div v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                  <div>\r\n                    <strong>{{ reply1.author }}</strong>\r\n                    <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                    <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                    <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                    <button v-if=\"isAuthor(this.currentUser, reply1.author)\" @click=\"deleteReply(comment.id, reply1.id, this.book, this.comments)\">Delete</button>\r\n                    <button v-if=\"!reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"handleCancelOrEdit(reply1, 0)\">Edit</button>\r\n                    <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"saveComments(this.book, this.comments, reply1)\">Save</button>\r\n                    <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"handleCancelOrEdit(reply1, 1)\">Cancel</button>\r\n                  </div>\r\n                  <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                    <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                    <button>Submit</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button @click=\"toggleForm\">Post Comment</button>\r\n      <modal v-if=\"showForm\">\r\n        <CommentForm :comments=\"this.comments\" :book=\"this.book\" />\r\n      </modal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../../../src/json/CommentData.json\"\r\nimport { isAuthor, deleteComment, addReplyComment, deleteReply, handleCancelOrEdit, saveComments } from \"../../../src/Methods/CommentMethod.js\"\r\nimport CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\r\nimport \"../../../src/components/Commentlist/Comment.css\"\r\nimport { formatDate } from \"@/Methods/Methods\"\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  components: {\r\n    CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      comments: Data.book.comments,\r\n      replyCommentId: null,\r\n      newReplyContent: \"\",\r\n      newComment: \"\",\r\n      currentUser: \"Bảo\",\r\n      showForm: false\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      this.comments = data.comments\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate,\r\n    isAuthor,\r\n    deleteComment,\r\n    addReplyComment,\r\n    deleteReply,\r\n    handleCancelOrEdit,\r\n    saveComments,\r\n    showReplyForm(comment) {\r\n      if (comment) {\r\n        return (this.replyCommentId = comment)\r\n      }\r\n      return (this.replyCommentId = !this.replyCommentId)\r\n    },\r\n    addReply(params) {\r\n      addReplyComment(params, this.newReplyContent, this.book, this.comments)\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    toggleForm() {\r\n      this.showForm = !this.showForm\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"AA8FA,OAAOA,IAAG,MAAO,oCAAmC;AACpD,SAASC,QAAQ,EAAEC,aAAa,EAAEC,eAAe,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,YAAW,QAAS,uCAAsC;AAC9I,OAAOC,WAAU,MAAO,qDAAoD;AAC5E,OAAO,iDAAgD;AACvD,SAASC,UAAS,QAAS,mBAAkB;AAC7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,UAAU,EAAE;IACVR;EACF,CAAC;EACDS,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAEjB,IAAI,CAACW,IAAI,CAACM,QAAQ;MAC5BC,cAAc,EAAE,IAAI;MACpBC,eAAe,EAAE,EAAE;MACnBC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU;IAChD,IAAIF,QAAQ,EAAE;MACZ,MAAMR,IAAG,GAAIW,IAAI,CAACC,KAAK,CAACJ,QAAQ;MAChC,IAAI,CAACP,QAAO,GAAID,IAAI,CAACC,QAAO;IAC9B;EACF,CAAC;EACDY,OAAO,EAAE;IACPrB,UAAU;IACVP,QAAQ;IACRC,aAAa;IACbC,eAAe;IACfC,WAAW;IACXC,kBAAkB;IAClBC,YAAY;IACZwB,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAIA,OAAO,EAAE;QACX,OAAQ,IAAI,CAACb,cAAa,GAAIa,OAAO;MACvC;MACA,OAAQ,IAAI,CAACb,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;IACpD,CAAC;IACDc,QAAQA,CAACC,MAAM,EAAE;MACf9B,eAAe,CAAC8B,MAAM,EAAE,IAAI,CAACd,eAAe,EAAE,IAAI,CAACR,IAAI,EAAE,IAAI,CAACM,QAAQ;MACtE,IAAI,CAACC,cAAa,GAAI,IAAG;MACzB,IAAI,CAACC,eAAc,GAAI,EAAC;IAC1B,CAAC;IACDe,UAAUA,CAAA,EAAG;MACX,IAAI,CAACZ,QAAO,GAAI,CAAC,IAAI,CAACA,QAAO;IAC/B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}