{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Data from \"../../../src/json/CommentData.json\";\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    // CommentForm\n  },\n  data() {\n    return {\n      bookData: null,\n      comments: Data.comments,\n      replyCommentId: null,\n      newReplyContent: \"\"\n    };\n  },\n  methods: {\n    addComment() {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n      this.newReplyContent = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(params) {\n      console.log(params);\n      let _id = \"\";\n      if (params.replies.replies) {\n        _id = params.replies.replies.length + 3;\n      } else {\n        _id = params.replies.length + 2;\n      }\n      const newCommentOrReply = {\n        id: _id,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        editing: false,\n        replies: []\n      };\n      params.replies.push(newCommentOrReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const comment = this.comments.find(comment => comment.id === commentId);\n      if (comment) {\n        this.deleteReplyRecursive(comment, replyId);\n        this.saveComments();\n      }\n    },\n    deleteReplyRecursive(parentComment, replyId) {\n      for (let i = 0; i < parentComment.replies.length; i++) {\n        const reply = parentComment.replies[i];\n        if (reply.id === replyId) {\n          parentComment.replies.splice(i, 1);\n          return;\n        } else if (reply.replies) {\n          const replyIndex = reply.replies.findIndex(r => r.id === replyId);\n          if (replyIndex !== -1) {\n            reply.replies.splice(replyIndex, 1);\n            return;\n          } else {\n            this.deleteReplyRecursive(reply, replyId);\n          }\n        }\n      }\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        comments: this.comments\n      };\n      const jsonData = JSON.stringify(data);\n      localStorage.setItem(\"comments\", jsonData);\n    }\n  },\n  created() {\n    if (this.book) {\n      this.bookData = Object.assign({}, this.book);\n    }\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      console.log(this.book);\n      if (data.book) {\n        this.bookData = Object.assign({}, data.book);\n      }\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["Data","name","props","book","type","Object","required","components","data","bookData","comments","replyCommentId","newReplyContent","methods","addComment","newComment","id","length","author","content","replies","push","saveComments","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","addReply","params","console","log","_id","newCommentOrReply","deleteReply","replyId","find","deleteReplyRecursive","parentComment","i","reply","replyIndex","r","editReply","saveReply","cancelEditReply","jsonData","JSON","stringify","localStorage","setItem","created","assign","getItem","parse"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n\r\n        <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newReplyContent\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n    <!-- <CommentForm :newReplyContent=\"newReplyContent\" :@submit.prevent=\"addComment\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../../../src/json/CommentData.json\"\r\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  components: {\r\n    // CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      bookData: null,\r\n      comments: Data.comments,\r\n      replyCommentId: null,\r\n      newReplyContent: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(params) {\r\n      console.log(params)\r\n      let _id = \"\"\r\n      if (params.replies.replies) {\r\n        _id = params.replies.replies.length + 3\r\n      } else {\r\n        _id = params.replies.length + 2\r\n      }\r\n      const newCommentOrReply = {\r\n        id: _id,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        editing: false,\r\n        replies: []\r\n      }\r\n      params.replies.push(newCommentOrReply)\r\n\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      if (comment) {\r\n        this.deleteReplyRecursive(comment, replyId)\r\n        this.saveComments()\r\n      }\r\n    },\r\n\r\n    deleteReplyRecursive(parentComment, replyId) {\r\n      for (let i = 0; i < parentComment.replies.length; i++) {\r\n        const reply = parentComment.replies[i]\r\n        if (reply.id === replyId) {\r\n          parentComment.replies.splice(i, 1)\r\n          return\r\n        } else if (reply.replies) {\r\n          const replyIndex = reply.replies.findIndex((r) => r.id === replyId)\r\n          if (replyIndex !== -1) {\r\n            reply.replies.splice(replyIndex, 1)\r\n            return\r\n          } else {\r\n            this.deleteReplyRecursive(reply, replyId)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    if (this.book) {\r\n      this.bookData = Object.assign({}, this.book)\r\n    }\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      console.log(this.book)\r\n      if (data.book) {\r\n        this.bookData = Object.assign({}, data.book)\r\n      }\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}