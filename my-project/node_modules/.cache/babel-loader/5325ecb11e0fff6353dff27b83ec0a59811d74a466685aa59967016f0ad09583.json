{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Data from \"../../../src/json/CommentData.json\";\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    // CommentForm\n  },\n  data() {\n    return {\n      comments: Data.comments,\n      replyCommentId: null,\n      newReplyContent: \"\",\n      newComment: \"\"\n    };\n  },\n  mounted() {},\n  methods: {\n    shouldShowComment(comment) {\n      const commentFromLocal = JSON.parse(localStorage.getItem(\"comments\"));\n      console.log(comment);\n      // Kiểm tra xem comment có nên hiển thị hay không\n      if (commentFromLocal) {\n        // Nếu comment không có thuộc tính bookId, thì luôn hiển thị\n        return true;\n      }\n      // Nếu comment có thuộc tính bookId, thì so sánh với id của prop book\n      return comment.id === this.book.id;\n    },\n    addComment() {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: \"Bảo\",\n        content: this.newComment,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.saveComments();\n      this.newComment = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n      this.saveComments();\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      this.saveComments();\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(params) {\n      const newCommentOrReply = {\n        id: params.id++,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        editing: false,\n        replies: []\n      };\n      params.replies.push(newCommentOrReply);\n      this.saveComments();\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const deleteComment = comment => {\n        for (let i = 0; i < comment.replies.length; i++) {\n          const reply = comment.replies[i];\n          if (reply.id === replyId) {\n            comment.replies.splice(i, 1);\n            return true;\n          }\n          if (reply.replies && deleteComment(reply)) {\n            return true;\n          }\n        }\n        return false;\n      };\n      const comment = this.comments.find(comment => comment.id === commentId);\n      if (comment && deleteComment(comment)) {\n        this.saveComments();\n      }\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n      this.saveComments();\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    saveComments() {\n      const data = {\n        book: this.book,\n        comments: this.comments\n      };\n      const jsonData = JSON.stringify(data);\n      localStorage.setItem(\"comments\", jsonData);\n    }\n  },\n  created() {\n    const jsonData = localStorage.getItem(\"comments\");\n    if (jsonData) {\n      const data = JSON.parse(jsonData);\n      console.log(this.book);\n      this.comments = data.comments;\n    }\n  }\n};","map":{"version":3,"names":["Data","name","props","book","type","Object","required","components","data","comments","replyCommentId","newReplyContent","newComment","mounted","methods","shouldShowComment","comment","commentFromLocal","JSON","parse","localStorage","getItem","console","log","id","addComment","length","author","content","replies","push","saveComments","deleteComment","commentId","index","findIndex","splice","editComment","editing","saveComment","cancelEditComment","showReplyForm","addReply","params","newCommentOrReply","deleteReply","replyId","i","reply","find","editReply","saveReply","cancelEditReply","jsonData","stringify","setItem","created"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\" v-show=\"shouldShowComment(comment)\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n\r\n        <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newComment\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n    <!-- <CommentForm :newReplyContent=\"newReplyContent\" :@submit.prevent=\"addComment\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../../../src/json/CommentData.json\"\r\n// import CommentForm from \"../../../src/components/CommentForm/CommentForm.vue\"\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  components: {\r\n    // CommentForm\r\n  },\r\n  data() {\r\n    return {\r\n      comments: Data.comments,\r\n      replyCommentId: null,\r\n      newReplyContent: \"\",\r\n      newComment: \"\"\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    shouldShowComment(comment) {\r\n      const commentFromLocal = JSON.parse(localStorage.getItem(\"comments\"))\r\n      console.log(comment)\r\n      // Kiểm tra xem comment có nên hiển thị hay không\r\n      if (commentFromLocal) {\r\n        // Nếu comment không có thuộc tính bookId, thì luôn hiển thị\r\n        return true\r\n      }\r\n      // Nếu comment có thuộc tính bookId, thì so sánh với id của prop book\r\n      return comment.id === this.book.id\r\n    },\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: \"Bảo\",\r\n        content: this.newComment,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.saveComments()\r\n      this.newComment = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n      this.saveComments()\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(params) {\r\n      const newCommentOrReply = {\r\n        id: params.id++,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        editing: false,\r\n        replies: []\r\n      }\r\n      params.replies.push(newCommentOrReply)\r\n\r\n      this.saveComments()\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const deleteComment = (comment) => {\r\n        for (let i = 0; i < comment.replies.length; i++) {\r\n          const reply = comment.replies[i]\r\n          if (reply.id === replyId) {\r\n            comment.replies.splice(i, 1)\r\n            return true\r\n          }\r\n          if (reply.replies && deleteComment(reply)) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      if (comment && deleteComment(comment)) {\r\n        this.saveComments()\r\n      }\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n      this.saveComments()\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    saveComments() {\r\n      const data = {\r\n        book: this.book,\r\n        comments: this.comments\r\n      }\r\n      const jsonData = JSON.stringify(data)\r\n      localStorage.setItem(\"comments\", jsonData)\r\n    }\r\n  },\r\n  created() {\r\n    const jsonData = localStorage.getItem(\"comments\")\r\n    if (jsonData) {\r\n      const data = JSON.parse(jsonData)\r\n      console.log(this.book)\r\n      this.comments = data.comments\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}