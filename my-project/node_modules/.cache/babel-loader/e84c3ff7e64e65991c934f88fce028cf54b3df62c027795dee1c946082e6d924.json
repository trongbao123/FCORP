{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      comments: [],\n      newComment: \"\",\n      newReplyContent: \"\",\n      replyCommentId: null,\n      currentUser: \"John\",\n      book: {\n        title: \"The Great Gatsby\",\n        author: \"F. Scott Fitzgerald\"\n      }\n    };\n  },\n  methods: {\n    addComment() {\n      const newComment = {\n        id: this.comments.length + 1,\n        author: this.currentUser,\n        content: this.newComment,\n        replies: []\n      };\n      this.comments.push(newComment);\n      this.newComment = \"\";\n    },\n    deleteComment(commentId) {\n      const index = this.comments.findIndex(comment => comment.id === commentId);\n      this.comments.splice(index, 1);\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    addReply(comment, parentReply = null) {\n      const newReply = {\n        id: comment.replies.length + 1,\n        author: this.currentUser,\n        content: this.newReplyContent,\n        replies: [],\n        parentReply: parentReply\n      };\n      if (parentReply) {\n        parentReply.replies.push(newReply);\n      } else {\n        comment.replies.push(newReply);\n      }\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const comment = this.comments.find(comment => comment.id === commentId);\n      const reply = this.findReply(comment, replyId);\n      const parentReply = this.findParentReply(comment, replyId);\n      if (parentReply) {\n        const index = parentReply.replies.findIndex(r => r.id === replyId);\n        parentReply.replies.splice(index, 1);\n      } else {\n        const index = comment.replies.findIndex(r => r.id === replyId);\n        comment.replies.splice(index, 1);\n      }\n    },\n    editReply(reply) {\n      reply.editing = true;\n    },\n    saveReply(reply) {\n      reply.editing = false;\n    },\n    cancelEditReply(reply) {\n      reply.editing = false;\n    },\n    showReplyForm(comment, parentReply = null) {\n      this.replyCommentId = comment;\n      if (parentReply) {\n        this.replyCommentId = parentReply;\n      }\n    },\n    shouldShowComment() {\n      return this.comments.length > 0;\n    },\n    isAuthor(currentUser, author) {\n      return currentUser === author;\n    },\n    findReply(comment, replyId) {\n      if (comment.id === replyId) {\n        return comment;\n      }\n      for (let i = 0; i < comment.replies.length; i++) {\n        const reply = comment.replies[i];\n        if (reply.id === replyId) {\n          return reply;\n        } else {\n          const foundReply = this.findReply(reply, replyId);\n          if (foundReply) {\n            return foundReply;\n          }\n        }\n      }\n      return null;\n    },\n    findParentReply(comment, replyId) {\n      for (let i = 0; i < comment.replies.length; i++) {\n        const reply = comment.replies[i];\n        if (reply.id === replyId) {\n          return null;\n        } else {\n          const foundParentReply = this.findParentReply(reply, replyId);\n          if (foundParentReply) {\n            return foundParentReply;\n          } else if (reply.replies) {\n            const parentReply = reply.replies.find(r => r.id === replyId);\n            if (parentReply) {\n              return reply;\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["data","comments","newComment","newReplyContent","replyCommentId","currentUser","book","title","author","methods","addComment","id","length","content","replies","push","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","cancelEditComment","addReply","parentReply","newReply","deleteReply","replyId","find","reply","findReply","findParentReply","r","editReply","saveReply","cancelEditReply","showReplyForm","shouldShowComment","isAuthor","i","foundReply","foundParentReply"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\" v-show=\"shouldShowComment()\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button v-if=\"isAuthor(this.currentUser, comment.author)\" @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button v-if=\"isAuthor(this.currentUser, reply.author)\" @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button v-if=\"isAuthor(this.currentUser, reply1.author)\" @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <form v-if=\"reply === replyCommentId && isAuthor(this.currentUser, reply1.author)\" @submit.prevent=\"addReply(comment, reply)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n            <form v-if=\"reply === replyCommentId && isAuthor(this.currentUser, reply.author)\" @submit.prevent=\"addReply(comment, reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n          </li>\r\n        </ul>\r\n\r\n        <form v-if=\"comment === replyCommentId && isAuthor(this.currentUser, comment.author)\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newComment\" placeholder=\"Write a comment...\" :rows=\"5\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      comments: [],\r\n      newComment: \"\",\r\n      newReplyContent: \"\",\r\n      replyCommentId: null,\r\n      currentUser: \"John\",\r\n      book: {\r\n        title: \"The Great Gatsby\",\r\n        author: \"F. Scott Fitzgerald\"\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      const newComment = {\r\n        id: this.comments.length + 1,\r\n        author: this.currentUser,\r\n        content: this.newComment,\r\n        replies: []\r\n      }\r\n      this.comments.push(newComment)\r\n      this.newComment = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const index = this.comments.findIndex((comment) => comment.id === commentId)\r\n      this.comments.splice(index, 1)\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    addReply(comment, parentReply = null) {\r\n      const newReply = {\r\n        id: comment.replies.length + 1,\r\n        author: this.currentUser,\r\n        content: this.newReplyContent,\r\n        replies: [],\r\n        parentReply: parentReply\r\n      }\r\n      if (parentReply) {\r\n        parentReply.replies.push(newReply)\r\n      } else {\r\n        comment.replies.push(newReply)\r\n      }\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const comment = this.comments.find((comment) => comment.id === commentId)\r\n      const reply = this.findReply(comment, replyId)\r\n      const parentReply = this.findParentReply(comment, replyId)\r\n      if (parentReply) {\r\n        const index = parentReply.replies.findIndex((r) => r.id === replyId)\r\n        parentReply.replies.splice(index, 1)\r\n      } else {\r\n        const index = comment.replies.findIndex((r) => r.id === replyId)\r\n        comment.replies.splice(index, 1)\r\n      }\r\n    },\r\n    editReply(reply) {\r\n      reply.editing = true\r\n    },\r\n    saveReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    cancelEditReply(reply) {\r\n      reply.editing = false\r\n    },\r\n    showReplyForm(comment, parentReply = null) {\r\n      this.replyCommentId = comment\r\n      if (parentReply) {\r\n        this.replyCommentId = parentReply\r\n      }\r\n    },\r\n    shouldShowComment() {\r\n      return this.comments.length > 0\r\n    },\r\n    isAuthor(currentUser, author) {\r\n      return currentUser === author\r\n    },\r\n    findReply(comment, replyId) {\r\n      if (comment.id === replyId) {\r\n        return comment\r\n      }\r\n      for (let i = 0; i < comment.replies.length; i++) {\r\n        const reply = comment.replies[i]\r\n        if (reply.id === replyId) {\r\n          return reply\r\n        } else {\r\n          const foundReply = this.findReply(reply, replyId)\r\n          if (foundReply) {\r\n            return foundReply\r\n          }\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    findParentReply(comment, replyId) {\r\n      for (let i = 0; i < comment.replies.length; i++) {\r\n        const reply = comment.replies[i]\r\n        if (reply.id === replyId) {\r\n          return null\r\n        } else {\r\n          const foundParentReply = this.findParentReply(reply, replyId)\r\n          if (foundParentReply) {\r\n            return foundParentReply\r\n          } else if (reply.replies) {\r\n            const parentReply = reply.replies.find((r) => r.id === replyId)\r\n            if (parentReply) {\r\n              return reply\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return null\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAmEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,MAAM;MACnBC,IAAI,EAAE;QACJC,KAAK,EAAE,kBAAkB;QACzBC,MAAM,EAAE;MACV;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMR,UAAS,GAAI;QACjBS,EAAE,EAAE,IAAI,CAACV,QAAQ,CAACW,MAAK,GAAI,CAAC;QAC5BJ,MAAM,EAAE,IAAI,CAACH,WAAW;QACxBQ,OAAO,EAAE,IAAI,CAACX,UAAU;QACxBY,OAAO,EAAE;MACX;MACA,IAAI,CAACb,QAAQ,CAACc,IAAI,CAACb,UAAU;MAC7B,IAAI,CAACA,UAAS,GAAI,EAAC;IACrB,CAAC;IACDc,aAAaA,CAACC,SAAS,EAAE;MACvB,MAAMC,KAAI,GAAI,IAAI,CAACjB,QAAQ,CAACkB,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACT,EAAC,KAAMM,SAAS;MAC3E,IAAI,CAAChB,QAAQ,CAACoB,MAAM,CAACH,KAAK,EAAE,CAAC;IAC/B,CAAC;IACDI,WAAWA,CAACF,OAAO,EAAE;MACnBA,OAAO,CAACG,OAAM,GAAI,IAAG;IACvB,CAAC;IACDC,WAAWA,CAACJ,OAAO,EAAE;MACnBA,OAAO,CAACG,OAAM,GAAI,KAAI;IACxB,CAAC;IACDE,iBAAiBA,CAACL,OAAO,EAAE;MACzBA,OAAO,CAACG,OAAM,GAAI,KAAI;IACxB,CAAC;IACDG,QAAQA,CAACN,OAAO,EAAEO,WAAU,GAAI,IAAI,EAAE;MACpC,MAAMC,QAAO,GAAI;QACfjB,EAAE,EAAES,OAAO,CAACN,OAAO,CAACF,MAAK,GAAI,CAAC;QAC9BJ,MAAM,EAAE,IAAI,CAACH,WAAW;QACxBQ,OAAO,EAAE,IAAI,CAACV,eAAe;QAC7BW,OAAO,EAAE,EAAE;QACXa,WAAW,EAAEA;MACf;MACA,IAAIA,WAAW,EAAE;QACfA,WAAW,CAACb,OAAO,CAACC,IAAI,CAACa,QAAQ;MACnC,OAAO;QACLR,OAAO,CAACN,OAAO,CAACC,IAAI,CAACa,QAAQ;MAC/B;MACA,IAAI,CAACzB,eAAc,GAAI,EAAC;IAC1B,CAAC;IACD0B,WAAWA,CAACZ,SAAS,EAAEa,OAAO,EAAE;MAC9B,MAAMV,OAAM,GAAI,IAAI,CAACnB,QAAQ,CAAC8B,IAAI,CAAEX,OAAO,IAAKA,OAAO,CAACT,EAAC,KAAMM,SAAS;MACxE,MAAMe,KAAI,GAAI,IAAI,CAACC,SAAS,CAACb,OAAO,EAAEU,OAAO;MAC7C,MAAMH,WAAU,GAAI,IAAI,CAACO,eAAe,CAACd,OAAO,EAAEU,OAAO;MACzD,IAAIH,WAAW,EAAE;QACf,MAAMT,KAAI,GAAIS,WAAW,CAACb,OAAO,CAACK,SAAS,CAAEgB,CAAC,IAAKA,CAAC,CAACxB,EAAC,KAAMmB,OAAO;QACnEH,WAAW,CAACb,OAAO,CAACO,MAAM,CAACH,KAAK,EAAE,CAAC;MACrC,OAAO;QACL,MAAMA,KAAI,GAAIE,OAAO,CAACN,OAAO,CAACK,SAAS,CAAEgB,CAAC,IAAKA,CAAC,CAACxB,EAAC,KAAMmB,OAAO;QAC/DV,OAAO,CAACN,OAAO,CAACO,MAAM,CAACH,KAAK,EAAE,CAAC;MACjC;IACF,CAAC;IACDkB,SAASA,CAACJ,KAAK,EAAE;MACfA,KAAK,CAACT,OAAM,GAAI,IAAG;IACrB,CAAC;IACDc,SAASA,CAACL,KAAK,EAAE;MACfA,KAAK,CAACT,OAAM,GAAI,KAAI;IACtB,CAAC;IACDe,eAAeA,CAACN,KAAK,EAAE;MACrBA,KAAK,CAACT,OAAM,GAAI,KAAI;IACtB,CAAC;IACDgB,aAAaA,CAACnB,OAAO,EAAEO,WAAU,GAAI,IAAI,EAAE;MACzC,IAAI,CAACvB,cAAa,GAAIgB,OAAM;MAC5B,IAAIO,WAAW,EAAE;QACf,IAAI,CAACvB,cAAa,GAAIuB,WAAU;MAClC;IACF,CAAC;IACDa,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACvC,QAAQ,CAACW,MAAK,GAAI;IAChC,CAAC;IACD6B,QAAQA,CAACpC,WAAW,EAAEG,MAAM,EAAE;MAC5B,OAAOH,WAAU,KAAMG,MAAK;IAC9B,CAAC;IACDyB,SAASA,CAACb,OAAO,EAAEU,OAAO,EAAE;MAC1B,IAAIV,OAAO,CAACT,EAAC,KAAMmB,OAAO,EAAE;QAC1B,OAAOV,OAAM;MACf;MACA,KAAK,IAAIsB,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAItB,OAAO,CAACN,OAAO,CAACF,MAAM,EAAE8B,CAAC,EAAE,EAAE;QAC/C,MAAMV,KAAI,GAAIZ,OAAO,CAACN,OAAO,CAAC4B,CAAC;QAC/B,IAAIV,KAAK,CAACrB,EAAC,KAAMmB,OAAO,EAAE;UACxB,OAAOE,KAAI;QACb,OAAO;UACL,MAAMW,UAAS,GAAI,IAAI,CAACV,SAAS,CAACD,KAAK,EAAEF,OAAO;UAChD,IAAIa,UAAU,EAAE;YACd,OAAOA,UAAS;UAClB;QACF;MACF;MACA,OAAO,IAAG;IACZ,CAAC;IACDT,eAAeA,CAACd,OAAO,EAAEU,OAAO,EAAE;MAChC,KAAK,IAAIY,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAItB,OAAO,CAACN,OAAO,CAACF,MAAM,EAAE8B,CAAC,EAAE,EAAE;QAC/C,MAAMV,KAAI,GAAIZ,OAAO,CAACN,OAAO,CAAC4B,CAAC;QAC/B,IAAIV,KAAK,CAACrB,EAAC,KAAMmB,OAAO,EAAE;UACxB,OAAO,IAAG;QACZ,OAAO;UACL,MAAMc,gBAAe,GAAI,IAAI,CAACV,eAAe,CAACF,KAAK,EAAEF,OAAO;UAC5D,IAAIc,gBAAgB,EAAE;YACpB,OAAOA,gBAAe;UACxB,OAAO,IAAIZ,KAAK,CAAClB,OAAO,EAAE;YACxB,MAAMa,WAAU,GAAIK,KAAK,CAAClB,OAAO,CAACiB,IAAI,CAAEI,CAAC,IAAKA,CAAC,CAACxB,EAAC,KAAMmB,OAAO;YAC9D,IAAIH,WAAW,EAAE;cACf,OAAOK,KAAI;YACb;UACF;QACF;MACF;MACA,OAAO,IAAG;IACZ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}