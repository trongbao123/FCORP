{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"CommentsView\",\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      comments: [],\n      replyCommentId: null,\n      newReplyContent: \"\",\n      newComment: \"\",\n      currentUser: \"Bảo\"\n    };\n  },\n  methods: {\n    shouldShowComment() {\n      const bookId = this.book.id;\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"));\n      if (!commentData) {\n        return false;\n      }\n      const bookComments = commentData[bookId];\n      return bookComments !== undefined && bookComments.length > 0;\n    },\n    addComment() {\n      const bookId = this.book.id;\n      const commentData = JSON.parse(localStorage.getItem(\"comments\")) || {};\n      const bookComments = commentData[bookId] || [];\n      const newComment = {\n        id: bookComments.length + 1,\n        author: \"Bảo\",\n        content: this.newComment,\n        replies: []\n      };\n      bookComments.push(newComment);\n      commentData[bookId] = bookComments;\n      localStorage.setItem(\"comments\", JSON.stringify(commentData));\n      this.comments = bookComments;\n      this.newComment = \"\";\n    },\n    deleteComment(commentId) {\n      const bookId = this.book.id;\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"));\n      if (!commentData) {\n        return;\n      }\n      const bookComments = commentData[bookId];\n      if (!bookComments) {\n        return;\n      }\n      const index = bookComments.findIndex(comment => comment.id === commentId);\n      if (index !== -1) {\n        bookComments.splice(index, 1);\n        commentData[bookId] = bookComments;\n        localStorage.setItem(\"comments\", JSON.stringify(commentData));\n        this.comments = bookComments;\n      }\n    },\n    editComment(comment) {\n      comment.editing = true;\n    },\n    saveComment(comment) {\n      comment.editing = false;\n      const bookId = this.book.id;\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"));\n      if (!commentData) {\n        return;\n      }\n      const bookComments = commentData[bookId];\n      if (!bookComments) {\n        return;\n      }\n      const index = bookComments.findIndex(c => c.id === comment.id);\n      if (index !== -1) {\n        bookComments[index] = comment;\n        commentData[bookId] = bookComments;\n        localStorage.setItem(\"comments\", JSON.stringify(commentData));\n      }\n    },\n    cancelEditComment(comment) {\n      comment.editing = false;\n    },\n    showReplyForm(comment) {\n      this.replyCommentId = comment;\n    },\n    addReply(params) {\n      const newCommentOrReply = {\n        id: params.id++,\n        author: \"Bảo\",\n        content: this.newReplyContent,\n        editing: false,\n        replies: []\n      };\n      params.replies.push(newCommentOrReply);\n      const bookId = this.book.id;\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"));\n      if (!commentData) {\n        return;\n      }\n      const bookComments = commentData[bookId];\n      if (!bookComments) {\n        return;\n      }\n      const index = bookComments.findIndex(c => c.id === params.id - 1);\n      if (index !== -1) {\n        bookComments[index] = params;\n        commentData[bookId] = bookComments;\n        localStorage.setItem(\"comments\", JSON.stringify(commentData));\n      }\n      this.replyCommentId = null;\n      this.newReplyContent = \"\";\n    },\n    deleteReply(commentId, replyId) {\n      const bookId = this.book.id;\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"));\n      if (!commentData) {\n        return;\n      }\n      const bookComments = commentData[bookId];\n      if (!bookComments) {\n        return;\n      }\n      const comment = bookComments.find(c => c.id === commentId);\n      if (!comment) {\n        return;\n      }\n      const deleteComment = c => {\n        for (let i = 0; i < c.replies.length; i++) {\n          const reply = c.replies[i];\n          if (reply.id === replyId) {\n            c.replies.splice(i, 1);\n            return true;\n          }\n          if (reply.replies && deleteComment(reply)) {\n            return true;\n          }\n        }\n        return false;\n      };\n      if (deleteComment(comment)) {\n        this.comments.replies = comment.replies;\n        const index = bookComments.findIndex(c => c.id === commentId);\n        if (index !== -1) {\n          bookComments[index] = comment;\n          commentData[bookId] = bookComments;\n          localStorage.setItem(\"comments\", JSON.stringify(commentData));\n        }\n      }\n    }\n  },\n  created() {\n    const bookId = this.book.id;\n    const commentData = JSON.parse(localStorage.getItem(\"comments\"));\n    if (commentData && commentData[bookId]) {\n      this.comments = commentData[bookId];\n    }\n  }\n};","map":{"version":3,"names":["name","props","book","type","Object","required","data","comments","replyCommentId","newReplyContent","newComment","currentUser","methods","shouldShowComment","bookId","id","commentData","JSON","parse","localStorage","getItem","bookComments","undefined","length","addComment","author","content","replies","push","setItem","stringify","deleteComment","commentId","index","findIndex","comment","splice","editComment","editing","saveComment","c","cancelEditComment","showReplyForm","addReply","params","newCommentOrReply","deleteReply","replyId","find","i","reply","created"],"sources":["C:\\Users\\Admin\\Desktop\\Test-FCORB-FE\\my-project\\src\\components\\Commentlist\\CommentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Comments {{ book.title }}</h2>\r\n    <ul>\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\" v-show=\"shouldShowComment()\">\r\n        <div>\r\n          <strong>{{ comment.author }}</strong>\r\n          <span v-if=\"!comment.editing\">{{ comment.content }}</span>\r\n          <textarea v-if=\"comment.editing\" v-model=\"comment.content\"></textarea>\r\n          <button v-if=\"isAuthor(this.currentUser, comment.author)\" @click=\"deleteComment(comment.id)\">Delete</button>\r\n          <button @click=\"showReplyForm(comment)\">Reply</button>\r\n          <button v-if=\"!comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"editComment(comment)\">Edit</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"saveComment(comment)\">Save</button>\r\n          <button v-if=\"comment.editing && isAuthor(this.currentUser, comment.author)\" @click=\"cancelEditComment(comment)\">Cancel</button>\r\n        </div>\r\n        <ul>\r\n          <li v-for=\"reply in comment.replies\" :key=\"reply.id\">\r\n            <div>\r\n              <strong>{{ reply.author }}</strong>\r\n              <span v-if=\"!reply.editing\">{{ reply.content }}</span>\r\n              <textarea v-if=\"reply.editing\" v-model=\"reply.content\"></textarea>\r\n              <button @click=\"showReplyForm(reply)\">Reply</button>\r\n              <button v-if=\"isAuthor(this.currentUser, reply.author)\" @click=\"deleteReply(comment.id, reply.id)\">Delete</button>\r\n              <button v-if=\"!reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"editReply(reply)\">Edit</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"saveReply(reply)\">Save</button>\r\n              <button v-if=\"reply.editing && isAuthor(this.currentUser, reply.author)\" @click=\"cancelEditReply(reply)\">Cancel</button>\r\n            </div>\r\n            <form v-if=\"reply === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n              <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n              <button>Submit</button>\r\n            </form>\r\n            <ul>\r\n              <li v-for=\"reply1 in reply.replies\" :key=\"reply1.id\">\r\n                <div>\r\n                  <strong>{{ reply1.author }}</strong>\r\n                  <span v-if=\"!reply1.editing\">{{ reply1.content }}</span>\r\n                  <textarea v-if=\"reply1.editing\" v-model=\"reply1.content\"></textarea>\r\n                  <button @click=\"showReplyForm(reply1)\">Reply</button>\r\n                  <button v-if=\"isAuthor(this.currentUser, reply1.author)\" @click=\"deleteReply(comment.id, reply1.id)\">Delete</button>\r\n                  <button v-if=\"!reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"editReply(reply1)\">Edit</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"saveReply(reply1)\">Save</button>\r\n                  <button v-if=\"reply1.editing && isAuthor(this.currentUser, reply1.author)\" @click=\"cancelEditReply(reply1)\">Cancel</button>\r\n                </div>\r\n                <form v-if=\"reply1 === replyCommentId\" @submit.prevent=\"addReply(reply)\">\r\n                  <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n                  <button>Submit</button>\r\n                </form>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n\r\n        <form v-if=\"comment === replyCommentId\" @submit.prevent=\"addReply(comment)\">\r\n          <textarea v-model=\"newReplyContent\" placeholder=\"Write a reply...\" :rows=\"3\"></textarea>\r\n          <button>Submit</button>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n\r\n    <form @submit.prevent=\"addComment\">\r\n      <textarea v-model=\"newComment\" placeholder=\"Write a comment...\" :rows=\"3\"></textarea>\r\n      <button>Submit</button>\r\n    </form>\r\n    <!-- <CommentForm :newReplyContent=\"newReplyContent\" :@submit.prevent=\"addComment\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CommentsView\",\r\n  props: {\r\n    book: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      comments: [],\r\n      replyCommentId: null,\r\n      newReplyContent: \"\",\r\n      newComment: \"\",\r\n      currentUser: \"Bảo\"\r\n    }\r\n  },\r\n  methods: {\r\n    shouldShowComment() {\r\n      const bookId = this.book.id\r\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"))\r\n      if (!commentData) {\r\n        return false\r\n      }\r\n      const bookComments = commentData[bookId]\r\n      return bookComments !== undefined && bookComments.length > 0\r\n    },\r\n    addComment() {\r\n      const bookId = this.book.id\r\n      const commentData = JSON.parse(localStorage.getItem(\"comments\")) || {}\r\n      const bookComments = commentData[bookId] || []\r\n      const newComment = {\r\n        id: bookComments.length + 1,\r\n        author: \"Bảo\",\r\n        content: this.newComment,\r\n        replies: []\r\n      }\r\n      bookComments.push(newComment)\r\n      commentData[bookId] = bookComments\r\n      localStorage.setItem(\"comments\", JSON.stringify(commentData))\r\n      this.comments = bookComments\r\n      this.newComment = \"\"\r\n    },\r\n    deleteComment(commentId) {\r\n      const bookId = this.book.id\r\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"))\r\n      if (!commentData) {\r\n        return\r\n      }\r\n      const bookComments = commentData[bookId]\r\n      if (!bookComments) {\r\n        return\r\n      }\r\n      const index = bookComments.findIndex((comment) => comment.id === commentId)\r\n      if (index !== -1) {\r\n        bookComments.splice(index, 1)\r\n        commentData[bookId] = bookComments\r\n        localStorage.setItem(\"comments\", JSON.stringify(commentData))\r\n        this.comments = bookComments\r\n      }\r\n    },\r\n    editComment(comment) {\r\n      comment.editing = true\r\n    },\r\n    saveComment(comment) {\r\n      comment.editing = false\r\n      const bookId = this.book.id\r\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"))\r\n      if (!commentData) {\r\n        return\r\n      }\r\n      const bookComments = commentData[bookId]\r\n      if (!bookComments) {\r\n        return\r\n      }\r\n      const index = bookComments.findIndex((c) => c.id === comment.id)\r\n      if (index !== -1) {\r\n        bookComments[index] = comment\r\n        commentData[bookId] = bookComments\r\n        localStorage.setItem(\"comments\", JSON.stringify(commentData))\r\n      }\r\n    },\r\n    cancelEditComment(comment) {\r\n      comment.editing = false\r\n    },\r\n    showReplyForm(comment) {\r\n      this.replyCommentId = comment\r\n    },\r\n    addReply(params) {\r\n      const newCommentOrReply = {\r\n        id: params.id++,\r\n        author: \"Bảo\",\r\n        content: this.newReplyContent,\r\n        editing: false,\r\n        replies: []\r\n      }\r\n      params.replies.push(newCommentOrReply)\r\n      const bookId = this.book.id\r\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"))\r\n      if (!commentData) {\r\n        return\r\n      }\r\n      const bookComments = commentData[bookId]\r\n      if (!bookComments) {\r\n        return\r\n      }\r\n      const index = bookComments.findIndex((c) => c.id === params.id - 1)\r\n      if (index !== -1) {\r\n        bookComments[index] = params\r\n        commentData[bookId] = bookComments\r\n        localStorage.setItem(\"comments\", JSON.stringify(commentData))\r\n      }\r\n      this.replyCommentId = null\r\n      this.newReplyContent = \"\"\r\n    },\r\n    deleteReply(commentId, replyId) {\r\n      const bookId = this.book.id\r\n      const commentData = JSON.parse(localStorage.getItem(\"comments\"))\r\n      if (!commentData) {\r\n        return\r\n      }\r\n      const bookComments = commentData[bookId]\r\n      if (!bookComments) {\r\n        return\r\n      }\r\n      const comment = bookComments.find((c) => c.id === commentId)\r\n      if (!comment) {\r\n        return\r\n      }\r\n      const deleteComment = (c) => {\r\n        for (let i = 0; i < c.replies.length; i++) {\r\n          const reply = c.replies[i]\r\n          if (reply.id === replyId) {\r\n            c.replies.splice(i, 1)\r\n            return true\r\n          }\r\n          if (reply.replies && deleteComment(reply)) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n      if (deleteComment(comment)) {\r\n        this.comments.replies = comment.replies\r\n        const index = bookComments.findIndex((c) => c.id === commentId)\r\n        if (index !== -1) {\r\n          bookComments[index] = comment\r\n          commentData[bookId] = bookComments\r\n          localStorage.setItem(\"comments\", JSON.stringify(commentData))\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const bookId = this.book.id\r\n    const commentData = JSON.parse(localStorage.getItem(\"comments\"))\r\n    if (commentData && commentData[bookId]) {\r\n      this.comments = commentData[bookId]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dm {\r\n  padding-left: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}